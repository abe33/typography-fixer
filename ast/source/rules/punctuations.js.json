{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "rule",
            "range": [
              8,
              12
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 12
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "rule",
            "range": [
              8,
              12
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 12
              }
            }
          },
          "range": [
            8,
            12
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 8
            },
            "end": {
              "line": 1,
              "column": 12
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "group",
            "range": [
              14,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 14
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "group",
            "range": [
              14,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 14
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            14,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 14
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../typography-fixer",
        "raw": "'../typography-fixer'",
        "range": [
          26,
          47
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 26
          },
          "end": {
            "line": 1,
            "column": 47
          }
        }
      },
      "range": [
        0,
        49
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 0
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "punctuations",
            "range": [
              53,
              65
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 4
              },
              "end": {
                "line": 3,
                "column": 16
              }
            }
          },
          "init": null,
          "range": [
            53,
            65
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 4
            },
            "end": {
              "line": 3,
              "column": 16
            }
          },
          "trailingComments": [
            {
              "type": "Block",
              "value": "*\n * A ruleset to replace common punctuations mistake.\n *\n * It includes rules for:\n *\n * - Replacing consecutive `!` or `?` characters by a single one\n * - Replacing ellipsis after `etc` by a period\n * - Replacing three consecutive periods by an ellipsis character\n * - Replacing hyphen in a composed word by a non-breaking hyphen\n *\n * @type {Array<Object>}\n ",
              "range": [
                67,
                432
              ],
              "loc": {
                "start": {
                  "line": 5,
                  "column": 0
                },
                "end": {
                  "line": 16,
                  "column": 3
                }
              }
            }
          ]
        }
      ],
      "kind": "let",
      "range": [
        49,
        433
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 0
        }
      }
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "punctuations",
          "range": [
            448,
            460
          ],
          "loc": {
            "start": {
              "line": 17,
              "column": 15
            },
            "end": {
              "line": 17,
              "column": 27
            }
          }
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "createRuleset",
            "range": [
              463,
              476
            ],
            "loc": {
              "start": {
                "line": 17,
                "column": 30
              },
              "end": {
                "line": 17,
                "column": 43
              }
            }
          },
          "arguments": [],
          "range": [
            463,
            478
          ],
          "loc": {
            "start": {
              "line": 17,
              "column": 30
            },
            "end": {
              "line": 17,
              "column": 45
            }
          }
        },
        "range": [
          448,
          478
        ],
        "loc": {
          "start": {
            "line": 17,
            "column": 15
          },
          "end": {
            "line": 17,
            "column": 45
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * A ruleset to replace common punctuations mistake.\n *\n * It includes rules for:\n *\n * - Replacing consecutive `!` or `?` characters by a single one\n * - Replacing ellipsis after `etc` by a period\n * - Replacing three consecutive periods by an ellipsis character\n * - Replacing hyphen in a composed word by a non-breaking hyphen\n *\n * @type {Array<Object>}\n ",
            "range": [
              67,
              432
            ],
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 16,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "range": [
        433,
        480
      ],
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 0
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * A ruleset to replace common punctuations mistake.\n *\n * It includes rules for:\n *\n * - Replacing consecutive `!` or `?` characters by a single one\n * - Replacing ellipsis after `etc` by a period\n * - Replacing three consecutive periods by an ellipsis character\n * - Replacing hyphen in a composed word by a non-breaking hyphen\n *\n * @type {Array<Object>}\n ",
          "range": [
            67,
            432
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "createRuleset",
        "range": [
          489,
          502
        ],
        "loc": {
          "start": {
            "line": 19,
            "column": 9
          },
          "end": {
            "line": 19,
            "column": 22
          }
        }
      },
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "group",
                "range": [
                  517,
                  522
                ],
                "loc": {
                  "start": {
                    "line": 20,
                    "column": 9
                  },
                  "end": {
                    "line": 20,
                    "column": 14
                  }
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "punctuations.common",
                  "raw": "'punctuations.common'",
                  "range": [
                    523,
                    544
                  ],
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 15
                    },
                    "end": {
                      "line": 20,
                      "column": 36
                    }
                  }
                },
                {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "rule",
                        "range": [
                          552,
                          556
                        ],
                        "loc": {
                          "start": {
                            "line": 21,
                            "column": 4
                          },
                          "end": {
                            "line": 21,
                            "column": 8
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "collapseMultiplePunctuation",
                          "raw": "'collapseMultiplePunctuation'",
                          "range": [
                            557,
                            586
                          ],
                          "loc": {
                            "start": {
                              "line": 21,
                              "column": 9
                            },
                            "end": {
                              "line": 21,
                              "column": 38
                            }
                          }
                        },
                        {
                          "type": "Literal",
                          "value": {},
                          "raw": "/([!?])\\1+/",
                          "regex": {
                            "pattern": "([!?])\\1+",
                            "flags": ""
                          },
                          "range": [
                            588,
                            599
                          ],
                          "loc": {
                            "start": {
                              "line": 21,
                              "column": 40
                            },
                            "end": {
                              "line": 21,
                              "column": 51
                            }
                          }
                        },
                        {
                          "type": "Literal",
                          "value": "$1",
                          "raw": "'$1'",
                          "range": [
                            601,
                            605
                          ],
                          "loc": {
                            "start": {
                              "line": 21,
                              "column": 53
                            },
                            "end": {
                              "line": 21,
                              "column": 57
                            }
                          }
                        }
                      ],
                      "range": [
                        552,
                        606
                      ],
                      "loc": {
                        "start": {
                          "line": 21,
                          "column": 4
                        },
                        "end": {
                          "line": 21,
                          "column": 58
                        }
                      }
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "rule",
                        "range": [
                          612,
                          616
                        ],
                        "loc": {
                          "start": {
                            "line": 22,
                            "column": 4
                          },
                          "end": {
                            "line": 22,
                            "column": 8
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "shortEtCaetera",
                          "raw": "'shortEtCaetera'",
                          "range": [
                            617,
                            633
                          ],
                          "loc": {
                            "start": {
                              "line": 22,
                              "column": 9
                            },
                            "end": {
                              "line": 22,
                              "column": 25
                            }
                          }
                        },
                        {
                          "type": "Literal",
                          "value": {},
                          "raw": "/([Ee]tc)(\\.{3}|\\u2026)/",
                          "regex": {
                            "pattern": "([Ee]tc)(\\.{3}|\\u2026)",
                            "flags": ""
                          },
                          "range": [
                            635,
                            659
                          ],
                          "loc": {
                            "start": {
                              "line": 22,
                              "column": 27
                            },
                            "end": {
                              "line": 22,
                              "column": 51
                            }
                          }
                        },
                        {
                          "type": "Literal",
                          "value": "$1.",
                          "raw": "'$1.'",
                          "range": [
                            661,
                            666
                          ],
                          "loc": {
                            "start": {
                              "line": 22,
                              "column": 53
                            },
                            "end": {
                              "line": 22,
                              "column": 58
                            }
                          }
                        }
                      ],
                      "range": [
                        612,
                        667
                      ],
                      "loc": {
                        "start": {
                          "line": 22,
                          "column": 4
                        },
                        "end": {
                          "line": 22,
                          "column": 59
                        }
                      }
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "rule",
                        "range": [
                          673,
                          677
                        ],
                        "loc": {
                          "start": {
                            "line": 23,
                            "column": 4
                          },
                          "end": {
                            "line": 23,
                            "column": 8
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "triplePeriods",
                          "raw": "'triplePeriods'",
                          "range": [
                            678,
                            693
                          ],
                          "loc": {
                            "start": {
                              "line": 23,
                              "column": 9
                            },
                            "end": {
                              "line": 23,
                              "column": 24
                            }
                          }
                        },
                        {
                          "type": "Literal",
                          "value": {},
                          "raw": "/\\.{3,}/",
                          "regex": {
                            "pattern": "\\.{3,}",
                            "flags": ""
                          },
                          "range": [
                            695,
                            703
                          ],
                          "loc": {
                            "start": {
                              "line": 23,
                              "column": 26
                            },
                            "end": {
                              "line": 23,
                              "column": 34
                            }
                          }
                        },
                        {
                          "type": "Literal",
                          "value": "…",
                          "raw": "'\\u2026'",
                          "range": [
                            705,
                            713
                          ],
                          "loc": {
                            "start": {
                              "line": 23,
                              "column": 36
                            },
                            "end": {
                              "line": 23,
                              "column": 44
                            }
                          }
                        }
                      ],
                      "range": [
                        673,
                        714
                      ],
                      "loc": {
                        "start": {
                          "line": 23,
                          "column": 4
                        },
                        "end": {
                          "line": 23,
                          "column": 45
                        }
                      }
                    },
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "rule",
                        "range": [
                          720,
                          724
                        ],
                        "loc": {
                          "start": {
                            "line": 24,
                            "column": 4
                          },
                          "end": {
                            "line": 24,
                            "column": 8
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "nonBreakingHyphen",
                          "raw": "'nonBreakingHyphen'",
                          "range": [
                            725,
                            744
                          ],
                          "loc": {
                            "start": {
                              "line": 24,
                              "column": 9
                            },
                            "end": {
                              "line": 24,
                              "column": 28
                            }
                          }
                        },
                        {
                          "type": "Literal",
                          "value": {},
                          "raw": "/(\\w)-(\\w)/",
                          "regex": {
                            "pattern": "(\\w)-(\\w)",
                            "flags": ""
                          },
                          "range": [
                            746,
                            757
                          ],
                          "loc": {
                            "start": {
                              "line": 24,
                              "column": 30
                            },
                            "end": {
                              "line": 24,
                              "column": 41
                            }
                          }
                        },
                        {
                          "type": "Literal",
                          "value": "$1‑$2",
                          "raw": "'$1\\u2011$2'",
                          "range": [
                            759,
                            771
                          ],
                          "loc": {
                            "start": {
                              "line": 24,
                              "column": 43
                            },
                            "end": {
                              "line": 24,
                              "column": 55
                            }
                          }
                        }
                      ],
                      "range": [
                        720,
                        772
                      ],
                      "loc": {
                        "start": {
                          "line": 24,
                          "column": 4
                        },
                        "end": {
                          "line": 24,
                          "column": 56
                        }
                      }
                    }
                  ],
                  "range": [
                    546,
                    776
                  ],
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 38
                    },
                    "end": {
                      "line": 25,
                      "column": 3
                    }
                  }
                }
              ],
              "range": [
                517,
                777
              ],
              "loc": {
                "start": {
                  "line": 20,
                  "column": 9
                },
                "end": {
                  "line": 25,
                  "column": 4
                }
              }
            },
            "range": [
              510,
              778
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 2
              },
              "end": {
                "line": 26,
                "column": 0
              }
            }
          }
        ],
        "range": [
          506,
          779
        ],
        "loc": {
          "start": {
            "line": 19,
            "column": 26
          },
          "end": {
            "line": 26,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        480,
        779
      ],
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 1
        }
      }
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    779
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 26,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * A ruleset to replace common punctuations mistake.\n *\n * It includes rules for:\n *\n * - Replacing consecutive `!` or `?` characters by a single one\n * - Replacing ellipsis after `etc` by a period\n * - Replacing three consecutive periods by an ellipsis character\n * - Replacing hyphen in a composed word by a non-breaking hyphen\n *\n * @type {Array<Object>}\n ",
      "range": [
        67,
        432
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 3
        }
      }
    }
  ]
}