[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/constants.js",
    "memberof": null,
    "longname": "src/constants.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import R from 'ramda'\n\nconst {compose, concat, map, join} = R\n\n/**\n * A map of all unicode currencies with the string to use in a RegExp to match\n * them.\n *\n * @type {Object}\n * @access private\n */\nexport const currencies = {\n  '¤': '¤',\n  '¥': '¥',\n  '£': '£',\n  '$': '\\\\$',\n  '\\u20a0': '\\u20a0',\n  '\\u20a1': '\\u20a1',\n  '\\u20a2': '\\u20a2',\n  '\\u20a3': '\\u20a3',\n  '\\u20a4': '\\u20a4',\n  '\\u20a5': '\\u20a5',\n  '\\u20a6': '\\u20a6',\n  '\\u20a7': '\\u20a7',\n  '\\u20a8': '\\u20a8',\n  '\\u20a9': '\\u20a9',\n  '\\u20aa': '\\u20aa',\n  '\\u20ab': '\\u20ab',\n  '\\u20ac': '\\u20ac',\n  '\\u20ad': '\\u20ad',\n  '\\u20ae': '\\u20ae',\n  '\\u20af': '\\u20af',\n  '\\u20b0': '\\u20b0',\n  '\\u20b1': '\\u20b1',\n  '\\u20b2': '\\u20b2',\n  '\\u20b3': '\\u20b3',\n  '\\u20b4': '\\u20b4',\n  '\\u20b5': '\\u20b5',\n  '\\u20b6': '\\u20b6',\n  '\\u20b7': '\\u20b7',\n  '\\u20b8': '\\u20b8',\n  '\\u20b9': '\\u20b9',\n  '\\u20ba': '\\u20ba',\n  '\\u20bb': '\\u20bb',\n  '\\u20bc': '\\u20bc',\n  '\\u20bd': '\\u20bd',\n  '\\u20be': '\\u20be',\n  '\\u0E3F': '\\u0E3F',\n  '\\u17DB': '\\u17DB'\n}\n\n/**\n * A string containing a regular expression to matches a currency.\n *\n * @type {string}\n * @access private\n */\nexport const currenciesRegExp = R.join('', R.values(currencies))\n\n/**\n * A list of all the vulgar fractions in unicode with the numerical value\n * to match them.\n *\n * @type {Array}\n * @access private\n */\nexport const vulgarFractions = [\n  [1, 4, '\\u00bc'],\n  [1, 2, '\\u00bd'],\n  [3, 4, '\\u00be'],\n  [1, 7, '\\u2150'],\n  [1, 9, '\\u2151'],\n  [1, 10, '\\u2152'],\n  [1, 3, '\\u2153'],\n  [2, 3, '\\u2154'],\n  [1, 5, '\\u2155'],\n  [2, 5, '\\u2156'],\n  [3, 5, '\\u2157'],\n  [4, 5, '\\u2158'],\n  [1, 6, '\\u2159'],\n  [5, 6, '\\u215a'],\n  [1, 8, '\\u215b'],\n  [3, 8, '\\u215c'],\n  [5, 8, '\\u215d'],\n  [7, 8, '\\u215e'],\n  [0, 3, '\\u2189']\n]\n\n/**\n * A list of all the scale prefix of the international unit system used\n * to generate all the variant for the units.\n *\n * @type {Array}\n * @access private\n */\nexport const unitScales = [\n  'y',\n  'z',\n  'a',\n  'f',\n  'p',\n  'n',\n  'µ',\n  'm',\n  'c',\n  'd',\n  '',\n  'da',\n  'h',\n  'k',\n  'M',\n  'G',\n  'T',\n  'P',\n  'E',\n  'Z',\n  'Y'\n]\n\n/**\n * A list of all the units that accept a prefix from the international unit\n * system.\n *\n * @type {Array}\n * @access private\n */\nexport const scalableUnits = [\n  'm',\n  'm²',\n  'm³',\n  'g',\n  's',\n  'l',\n  'L',\n  'b',\n  'B',\n  'K',\n  'W',\n  'V',\n  'Hz',\n  'Ω',\n  'A',\n  'mol',\n  'cd'\n]\n\n/**\n * A list of all the supported surface units.\n *\n * @type {Array}\n * @access private\n */\nexport const surfaceUnits = [\n  'mile',\n  'miles',\n  'in',\n  'yd',\n  'ft',\n  'm'\n]\n\n/**\n * A list of all the supported volume units.\n *\n * @type {Array}\n * @access private\n */\nexport const volumeUnits = [\n  'in',\n  'yd',\n  'ft',\n  'm'\n]\n\n/**\n * A list of all the other supported units that are not created using the\n * international system units factory.\n *\n * @type {Array}\n * @access private\n */\nexport const otherUnits = [\n  // temperatures\n  '°C',\n  '°F',\n  '°Ré',\n  '°N',\n  '°Ra',\n  // distances\n  'mi',\n  'in',\n  'ft',\n  'yd',\n  'nautical mile',\n  'nautical miles',\n  // speed\n  'kmph',\n  'km/h',\n  'mps',\n  'm/s',\n  'mph',\n  'mi/h',\n  'knot',\n  'knots',\n  'nautical mile/h',\n  'nautical miles/h',\n  'ma',\n  // surfaces\n  'ha',\n  'a',\n  'ca',\n  'mile²',\n  'miles²',\n  'in²',\n  'yd²',\n  'ft²',\n  'ro',\n  'acre',\n  'acres',\n  'nautical mile²',\n  'nautical miles²',\n  // volumes\n  'in³',\n  'ft³',\n  'yd³',\n  'gal',\n  'bbl',\n  'pt',\n  'fluid pt',\n  'dry pt',\n  // weight\n  't',\n  'carat',\n  'grain',\n  'oz',\n  'lb',\n  'cwt',\n  'ton',\n  'st',\n  // time\n  'h',\n  'min',\n  // electric\n  'dBm',\n  'dBW',\n  'var',\n  'VA',\n  'F',\n  'H',\n  'S',\n  'C',\n  'Ah',\n  'J',\n  'kWh',\n  'eV',\n  'Ω∙m',\n  'S/m',\n  'V/m',\n  'N/C',\n  'V·m',\n  'T',\n  'G',\n  'Wb',\n  'dB',\n  'ppm'\n]\n\n/**\n * A function to combine the units from international units system with their\n * prefix.\n *\n * @param  {Array} scales the list of scales prefix to use\n * @param  {Array} units the list of units to combine\n * @return {Array} an array containing all the variants of the provided units\n * @access private\n */\nconst combine = compose(map(join('')), R.xprod)\n\n/**\n * A list of all the supported units.\n *\n * @type {Array}\n * @access private\n */\nexport const allUnits = concat(otherUnits, combine(unitScales, scalableUnits))\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "compose",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~compose",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "currencies",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~currencies",
    "access": "private",
    "export": true,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": "{currencies}",
    "description": "A map of all unicode currencies with the string to use in a RegExp to match\nthem.",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "currenciesRegExp",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~currenciesRegExp",
    "access": "private",
    "export": true,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": "{currenciesRegExp}",
    "description": "A string containing a regular expression to matches a currency.",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "vulgarFractions",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~vulgarFractions",
    "access": "private",
    "export": true,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": "{vulgarFractions}",
    "description": "A list of all the vulgar fractions in unicode with the numerical value\nto match them.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "unitScales",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~unitScales",
    "access": "private",
    "export": true,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": "{unitScales}",
    "description": "A list of all the scale prefix of the international unit system used\nto generate all the variant for the units.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 6,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "scalableUnits",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~scalableUnits",
    "access": "private",
    "export": true,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": "{scalableUnits}",
    "description": "A list of all the units that accept a prefix from the international unit\nsystem.",
    "lineNumber": 127,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "surfaceUnits",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~surfaceUnits",
    "access": "private",
    "export": true,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": "{surfaceUnits}",
    "description": "A list of all the supported surface units.",
    "lineNumber": 153,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 8,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "volumeUnits",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~volumeUnits",
    "access": "private",
    "export": true,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": "{volumeUnits}",
    "description": "A list of all the supported volume units.",
    "lineNumber": 168,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 9,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "otherUnits",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~otherUnits",
    "access": "private",
    "export": true,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": "{otherUnits}",
    "description": "A list of all the other supported units that are not created using the\ninternational system units factory.",
    "lineNumber": 182,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "combine",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~combine",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": null,
    "description": "A function to combine the units from international units system with their\nprefix.",
    "lineNumber": 277,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "scales",
        "description": "the list of scales prefix to use"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "units",
        "description": "the list of units to combine"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "an array containing all the variants of the provided units"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "allUnits",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~allUnits",
    "access": "private",
    "export": true,
    "importPath": "typography-fixer/src/constants.js",
    "importStyle": "{allUnits}",
    "description": "A list of all the supported units.",
    "lineNumber": 285,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/ignores/html.js",
    "memberof": null,
    "longname": "src/ignores/html.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {ignore, group} from '../typography-fixer'\n\nlet htmlIgnores\n\n/**\n * A set of rules to ignore some html blocks.\n *\n * The following set includes rules to ignore:\n *\n * - All tags definition\n * - Content of `pre`, `kbd`, `code`, `style`, `script` and `textarea` tags\n *\n * @type {Array<Object>}\n */\nexport default htmlIgnores = createIgnoreset()\n\nfunction createIgnoreset () {\n  return group('html', [\n    ignore('tag', /<[^>]+>/),\n    ignore('plainTextTagContent', /<(pre|kbd|code|style|script|textarea)[^>]*>.*?<\\/\\1>/)\n  ])\n}\n"
  },
  {
    "__docId__": 13,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "htmlIgnores",
    "memberof": "src/ignores/html.js",
    "longname": "src/ignores/html.js~htmlIgnores",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/ignores/html.js",
    "importStyle": "htmlIgnores",
    "description": "A set of rules to ignore some html blocks.\n\nThe following set includes rules to ignore:\n\n- All tags definition\n- Content of `pre`, `kbd`, `code`, `style`, `script` and `textarea` tags",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 14,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createIgnoreset",
    "memberof": "src/ignores/html.js",
    "longname": "src/ignores/html.js~createIgnoreset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/ignores/html.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/ignores/markdown.js",
    "memberof": null,
    "longname": "src/ignores/markdown.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {ignore, group} from '../typography-fixer'\n\nlet markdownIgnores\n\n/**\n * A set of rules to ignore some markdown blocks.\n *\n * The following set includes rules to ignore:\n *\n * - Images and links url and title\n * - Inline code blocks defined with a single backtick\n * - Code blocks defined with three backticks\n * - Preformatted block using a four spaces indent\n *\n * @type {Array<Object>}\n */\nexport default markdownIgnores = createIgnoreset()\n\nfunction createIgnoreset () {\n  return group('markdown', [\n    ignore('imageAndLinkStart', /!?\\[/),\n    ignore('imageAndLinkEnd', /\\]\\([^\\)]+\\)/),\n    ignore('imageAndLinkWithExternalDefinitionEnd', /\\]\\s*\\[[^\\]]*\\]/),\n    ignore('linkDefinition', /\\[[^\\]]+\\]:.*$/m),\n    ignore('codeBlock', /(```)(.|\\n)*?\\1/),\n    ignore('preformattedBlock', /^\\x20{4}.*$/m),\n    ignore('codeInline', /(`{1,2}).*?\\1/),\n    ignore('url', /\\b((?:[a-zA-Z][\\w-]+:(?:\\/{1,3}|[a-zA-Z0-9%])|www\\d{0,3}[.]|[a-zA-Z0-9.\\-]+[.][a-zA-Z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/)\n  ])\n}\n"
  },
  {
    "__docId__": 16,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "markdownIgnores",
    "memberof": "src/ignores/markdown.js",
    "longname": "src/ignores/markdown.js~markdownIgnores",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/ignores/markdown.js",
    "importStyle": "markdownIgnores",
    "description": "A set of rules to ignore some markdown blocks.\n\nThe following set includes rules to ignore:\n\n- Images and links url and title\n- Inline code blocks defined with a single backtick\n- Code blocks defined with three backticks\n- Preformatted block using a four spaces indent",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 17,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createIgnoreset",
    "memberof": "src/ignores/markdown.js",
    "longname": "src/ignores/markdown.js~createIgnoreset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/ignores/markdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lowercase.js",
    "memberof": null,
    "longname": "src/lowercase.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import R from 'ramda'\n\nexport default R.map(String.fromCharCode, [\n  0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006A, 0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007A, 0x00B5, 0x00DF, 0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 0x00F0, 0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x00FD, 0x00FE, 0x00FF, 0x0101, 0x0103, 0x0105, 0x0107, 0x0109, 0x010B, 0x010D, 0x010F, 0x0111, 0x0113, 0x0115, 0x0117, 0x0119, 0x011B, 0x011D, 0x011F, 0x0121, 0x0123, 0x0125, 0x0127, 0x0129, 0x012B, 0x012D, 0x012F, 0x0131, 0x0133, 0x0135, 0x0137, 0x0138, 0x013A, 0x013C, 0x013E, 0x0140, 0x0142, 0x0144, 0x0146, 0x0148, 0x0149, 0x014B, 0x014D, 0x014F, 0x0151, 0x0153, 0x0155, 0x0157, 0x0159, 0x015B, 0x015D, 0x015F, 0x0161, 0x0163, 0x0165, 0x0167, 0x0169, 0x016B, 0x016D, 0x016F, 0x0171, 0x0173, 0x0175, 0x0177, 0x017A, 0x017C, 0x017E, 0x017F, 0x0180, 0x0183, 0x0185, 0x0188, 0x018C, 0x018D, 0x0192, 0x0195, 0x0199, 0x019A, 0x019B, 0x019E, 0x01A1, 0x01A3, 0x01A5, 0x01A8, 0x01AA, 0x01AB, 0x01AD, 0x01B0, 0x01B4, 0x01B6, 0x01B9, 0x01BA, 0x01BD, 0x01BE, 0x01BF, 0x01C6, 0x01C9, 0x01CC, 0x01CE, 0x01D0, 0x01D2, 0x01D4, 0x01D6, 0x01D8, 0x01DA, 0x01DC, 0x01DD, 0x01DF, 0x01E1, 0x01E3, 0x01E5, 0x01E7, 0x01E9, 0x01EB, 0x01ED, 0x01EF, 0x01F0, 0x01F3, 0x01F5, 0x01F9, 0x01FB, 0x01FD, 0x01FF, 0x0201, 0x0203, 0x0205, 0x0207, 0x0209, 0x020B, 0x020D, 0x020F, 0x0211, 0x0213, 0x0215, 0x0217, 0x0219, 0x021B, 0x021D, 0x021F, 0x0221, 0x0223, 0x0225, 0x0227, 0x0229, 0x022B, 0x022D, 0x022F, 0x0231, 0x0233, 0x0234, 0x0235, 0x0236, 0x0237, 0x0238, 0x0239, 0x023C, 0x023F, 0x0240, 0x0242, 0x0247, 0x0249, 0x024B, 0x024D, 0x024F, 0x0250, 0x0251, 0x0252, 0x0253, 0x0254, 0x0255, 0x0256, 0x0257, 0x0258, 0x0259, 0x025A, 0x025B, 0x025C, 0x025D, 0x025E, 0x025F, 0x0260, 0x0261, 0x0262, 0x0263, 0x0264, 0x0265, 0x0266, 0x0267, 0x0268, 0x0269, 0x026A, 0x026B, 0x026C, 0x026D, 0x026E, 0x026F, 0x0270, 0x0271, 0x0272, 0x0273, 0x0274, 0x0275, 0x0276, 0x0277, 0x0278, 0x0279, 0x027A, 0x027B, 0x027C, 0x027D, 0x027E, 0x027F, 0x0280, 0x0281, 0x0282, 0x0283, 0x0284, 0x0285, 0x0286, 0x0287, 0x0288, 0x0289, 0x028A, 0x028B, 0x028C, 0x028D, 0x028E, 0x028F, 0x0290, 0x0291, 0x0292, 0x0293, 0x0295, 0x0296, 0x0297, 0x0298, 0x0299, 0x029A, 0x029B, 0x029C, 0x029D, 0x029E, 0x029F, 0x02A0, 0x02A1, 0x02A2, 0x02A3, 0x02A4, 0x02A5, 0x02A6, 0x02A7, 0x02A8, 0x02A9, 0x02AA, 0x02AB, 0x02AC, 0x02AD, 0x02AE, 0x02AF, 0x0371, 0x0373, 0x0377, 0x037B, 0x037C, 0x037D, 0x0390, 0x03AC, 0x03AD, 0x03AE, 0x03AF, 0x03B0, 0x03B1, 0x03B2, 0x03B3, 0x03B4, 0x03B5, 0x03B6, 0x03B7, 0x03B8, 0x03B9, 0x03BA, 0x03BB, 0x03BC, 0x03BD, 0x03BE, 0x03BF, 0x03C0, 0x03C1, 0x03C2, 0x03C3, 0x03C4, 0x03C5, 0x03C6, 0x03C7, 0x03C8, 0x03C9, 0x03CA, 0x03CB, 0x03CC, 0x03CD, 0x03CE, 0x03D0, 0x03D1, 0x03D5, 0x03D6, 0x03D7, 0x03D9, 0x03DB, 0x03DD, 0x03DF, 0x03E1, 0x03E3, 0x03E5, 0x03E7, 0x03E9, 0x03EB, 0x03ED, 0x03EF, 0x03F0, 0x03F1, 0x03F2, 0x03F3, 0x03F5, 0x03F8, 0x03FB, 0x03FC, 0x0430, 0x0431, 0x0432, 0x0433, 0x0434, 0x0435, 0x0436, 0x0437, 0x0438, 0x0439, 0x043A, 0x043B, 0x043C, 0x043D, 0x043E, 0x043F, 0x0440, 0x0441, 0x0442, 0x0443, 0x0444, 0x0445, 0x0446, 0x0447, 0x0448, 0x0449, 0x044A, 0x044B, 0x044C, 0x044D, 0x044E, 0x044F, 0x0450, 0x0451, 0x0452, 0x0453, 0x0454, 0x0455, 0x0456, 0x0457, 0x0458, 0x0459, 0x045A, 0x045B, 0x045C, 0x045D, 0x045E, 0x045F, 0x0461, 0x0463, 0x0465, 0x0467, 0x0469, 0x046B, 0x046D, 0x046F, 0x0471, 0x0473, 0x0475, 0x0477, 0x0479, 0x047B, 0x047D, 0x047F, 0x0481, 0x048B, 0x048D, 0x048F, 0x0491, 0x0493, 0x0495, 0x0497, 0x0499, 0x049B, 0x049D, 0x049F, 0x04A1, 0x04A3, 0x04A5, 0x04A7, 0x04A9, 0x04AB, 0x04AD, 0x04AF, 0x04B1, 0x04B3, 0x04B5, 0x04B7, 0x04B9, 0x04BB, 0x04BD, 0x04BF, 0x04C2, 0x04C4, 0x04C6, 0x04C8, 0x04CA, 0x04CC, 0x04CE, 0x04CF, 0x04D1, 0x04D3, 0x04D5, 0x04D7, 0x04D9, 0x04DB, 0x04DD, 0x04DF, 0x04E1, 0x04E3, 0x04E5, 0x04E7, 0x04E9, 0x04EB, 0x04ED, 0x04EF, 0x04F1, 0x04F3, 0x04F5, 0x04F7, 0x04F9, 0x04FB, 0x04FD, 0x04FF, 0x0501, 0x0503, 0x0505, 0x0507, 0x0509, 0x050B, 0x050D, 0x050F, 0x0511, 0x0513, 0x0515, 0x0517, 0x0519, 0x051B, 0x051D, 0x051F, 0x0521, 0x0523, 0x0525, 0x0527, 0x0529, 0x052B, 0x052D, 0x052F, 0x0561, 0x0562, 0x0563, 0x0564, 0x0565, 0x0566, 0x0567, 0x0568, 0x0569, 0x056A, 0x056B, 0x056C, 0x056D, 0x056E, 0x056F, 0x0570, 0x0571, 0x0572, 0x0573, 0x0574, 0x0575, 0x0576, 0x0577, 0x0578, 0x0579, 0x057A, 0x057B, 0x057C, 0x057D, 0x057E, 0x057F, 0x0580, 0x0581, 0x0582, 0x0583, 0x0584, 0x0585, 0x0586, 0x0587, 0x13F8, 0x13F9, 0x13FA, 0x13FB, 0x13FC, 0x13FD, 0x1D00, 0x1D01, 0x1D02, 0x1D03, 0x1D04, 0x1D05, 0x1D06, 0x1D07, 0x1D08, 0x1D09, 0x1D0A, 0x1D0B, 0x1D0C, 0x1D0D, 0x1D0E, 0x1D0F, 0x1D10, 0x1D11, 0x1D12, 0x1D13, 0x1D14, 0x1D15, 0x1D16, 0x1D17, 0x1D18, 0x1D19, 0x1D1A, 0x1D1B, 0x1D1C, 0x1D1D, 0x1D1E, 0x1D1F, 0x1D20, 0x1D21, 0x1D22, 0x1D23, 0x1D24, 0x1D25, 0x1D26, 0x1D27, 0x1D28, 0x1D29, 0x1D2A, 0x1D2B, 0x1D6B, 0x1D6C, 0x1D6D, 0x1D6E, 0x1D6F, 0x1D70, 0x1D71, 0x1D72, 0x1D73, 0x1D74, 0x1D75, 0x1D76, 0x1D77, 0x1D79, 0x1D7A, 0x1D7B, 0x1D7C, 0x1D7D, 0x1D7E, 0x1D7F, 0x1D80, 0x1D81, 0x1D82, 0x1D83, 0x1D84, 0x1D85, 0x1D86, 0x1D87, 0x1D88, 0x1D89, 0x1D8A, 0x1D8B, 0x1D8C, 0x1D8D, 0x1D8E, 0x1D8F, 0x1D90, 0x1D91, 0x1D92, 0x1D93, 0x1D94, 0x1D95, 0x1D96, 0x1D97, 0x1D98, 0x1D99, 0x1D9A, 0x1E01, 0x1E03, 0x1E05, 0x1E07, 0x1E09, 0x1E0B, 0x1E0D, 0x1E0F, 0x1E11, 0x1E13, 0x1E15, 0x1E17, 0x1E19, 0x1E1B, 0x1E1D, 0x1E1F, 0x1E21, 0x1E23, 0x1E25, 0x1E27, 0x1E29, 0x1E2B, 0x1E2D, 0x1E2F, 0x1E31, 0x1E33, 0x1E35, 0x1E37, 0x1E39, 0x1E3B, 0x1E3D, 0x1E3F, 0x1E41, 0x1E43, 0x1E45, 0x1E47, 0x1E49, 0x1E4B, 0x1E4D, 0x1E4F, 0x1E51, 0x1E53, 0x1E55, 0x1E57, 0x1E59, 0x1E5B, 0x1E5D, 0x1E5F, 0x1E61, 0x1E63, 0x1E65, 0x1E67, 0x1E69, 0x1E6B, 0x1E6D, 0x1E6F, 0x1E71, 0x1E73, 0x1E75, 0x1E77, 0x1E79, 0x1E7B, 0x1E7D, 0x1E7F, 0x1E81, 0x1E83, 0x1E85, 0x1E87, 0x1E89, 0x1E8B, 0x1E8D, 0x1E8F, 0x1E91, 0x1E93, 0x1E95, 0x1E96, 0x1E97, 0x1E98, 0x1E99, 0x1E9A, 0x1E9B, 0x1E9C, 0x1E9D, 0x1E9F, 0x1EA1, 0x1EA3, 0x1EA5, 0x1EA7, 0x1EA9, 0x1EAB, 0x1EAD, 0x1EAF, 0x1EB1, 0x1EB3, 0x1EB5, 0x1EB7, 0x1EB9, 0x1EBB, 0x1EBD, 0x1EBF, 0x1EC1, 0x1EC3, 0x1EC5, 0x1EC7, 0x1EC9, 0x1ECB, 0x1ECD, 0x1ECF, 0x1ED1, 0x1ED3, 0x1ED5, 0x1ED7, 0x1ED9, 0x1EDB, 0x1EDD, 0x1EDF, 0x1EE1, 0x1EE3, 0x1EE5, 0x1EE7, 0x1EE9, 0x1EEB, 0x1EED, 0x1EEF, 0x1EF1, 0x1EF3, 0x1EF5, 0x1EF7, 0x1EF9, 0x1EFB, 0x1EFD, 0x1EFF, 0x1F00, 0x1F01, 0x1F02, 0x1F03, 0x1F04, 0x1F05, 0x1F06, 0x1F07, 0x1F10, 0x1F11, 0x1F12, 0x1F13, 0x1F14, 0x1F15, 0x1F20, 0x1F21, 0x1F22, 0x1F23, 0x1F24, 0x1F25, 0x1F26, 0x1F27, 0x1F30, 0x1F31, 0x1F32, 0x1F33, 0x1F34, 0x1F35, 0x1F36, 0x1F37, 0x1F40, 0x1F41, 0x1F42, 0x1F43, 0x1F44, 0x1F45, 0x1F50, 0x1F51, 0x1F52, 0x1F53, 0x1F54, 0x1F55, 0x1F56, 0x1F57, 0x1F60, 0x1F61, 0x1F62, 0x1F63, 0x1F64, 0x1F65, 0x1F66, 0x1F67, 0x1F70, 0x1F71, 0x1F72, 0x1F73, 0x1F74, 0x1F75, 0x1F76, 0x1F77, 0x1F78, 0x1F79, 0x1F7A, 0x1F7B, 0x1F7C, 0x1F7D, 0x1F80, 0x1F81, 0x1F82, 0x1F83, 0x1F84, 0x1F85, 0x1F86, 0x1F87, 0x1F90, 0x1F91, 0x1F92, 0x1F93, 0x1F94, 0x1F95, 0x1F96, 0x1F97, 0x1FA0, 0x1FA1, 0x1FA2, 0x1FA3, 0x1FA4, 0x1FA5, 0x1FA6, 0x1FA7, 0x1FB0, 0x1FB1, 0x1FB2, 0x1FB3, 0x1FB4, 0x1FB6, 0x1FB7, 0x1FBE, 0x1FC2, 0x1FC3, 0x1FC4, 0x1FC6, 0x1FC7, 0x1FD0, 0x1FD1, 0x1FD2, 0x1FD3, 0x1FD6, 0x1FD7, 0x1FE0, 0x1FE1, 0x1FE2, 0x1FE3, 0x1FE4, 0x1FE5, 0x1FE6, 0x1FE7, 0x1FF2, 0x1FF3, 0x1FF4, 0x1FF6, 0x1FF7, 0x210A, 0x210E, 0x210F, 0x2113, 0x212F, 0x2134, 0x2139, 0x213C, 0x213D, 0x2146, 0x2147, 0x2148, 0x2149, 0x214E, 0x2184, 0x2C30, 0x2C31, 0x2C32, 0x2C33, 0x2C34, 0x2C35, 0x2C36, 0x2C37, 0x2C38, 0x2C39, 0x2C3A, 0x2C3B, 0x2C3C, 0x2C3D, 0x2C3E, 0x2C3F, 0x2C40, 0x2C41, 0x2C42, 0x2C43, 0x2C44, 0x2C45, 0x2C46, 0x2C47, 0x2C48, 0x2C49, 0x2C4A, 0x2C4B, 0x2C4C, 0x2C4D, 0x2C4E, 0x2C4F, 0x2C50, 0x2C51, 0x2C52, 0x2C53, 0x2C54, 0x2C55, 0x2C56, 0x2C57, 0x2C58, 0x2C59, 0x2C5A, 0x2C5B, 0x2C5C, 0x2C5D, 0x2C5E, 0x2C61, 0x2C65, 0x2C66, 0x2C68, 0x2C6A, 0x2C6C, 0x2C71, 0x2C73, 0x2C74, 0x2C76, 0x2C77, 0x2C78, 0x2C79, 0x2C7A, 0x2C7B, 0x2C81, 0x2C83, 0x2C85, 0x2C87, 0x2C89, 0x2C8B, 0x2C8D, 0x2C8F, 0x2C91, 0x2C93, 0x2C95, 0x2C97, 0x2C99, 0x2C9B, 0x2C9D, 0x2C9F, 0x2CA1, 0x2CA3, 0x2CA5, 0x2CA7, 0x2CA9, 0x2CAB, 0x2CAD, 0x2CAF, 0x2CB1, 0x2CB3, 0x2CB5, 0x2CB7, 0x2CB9, 0x2CBB, 0x2CBD, 0x2CBF, 0x2CC1, 0x2CC3, 0x2CC5, 0x2CC7, 0x2CC9, 0x2CCB, 0x2CCD, 0x2CCF, 0x2CD1, 0x2CD3, 0x2CD5, 0x2CD7, 0x2CD9, 0x2CDB, 0x2CDD, 0x2CDF, 0x2CE1, 0x2CE3, 0x2CE4, 0x2CEC, 0x2CEE, 0x2CF3, 0x2D00, 0x2D01, 0x2D02, 0x2D03, 0x2D04, 0x2D05, 0x2D06, 0x2D07, 0x2D08, 0x2D09, 0x2D0A, 0x2D0B, 0x2D0C, 0x2D0D, 0x2D0E, 0x2D0F, 0x2D10, 0x2D11, 0x2D12, 0x2D13, 0x2D14, 0x2D15, 0x2D16, 0x2D17, 0x2D18, 0x2D19, 0x2D1A, 0x2D1B, 0x2D1C, 0x2D1D, 0x2D1E, 0x2D1F, 0x2D20, 0x2D21, 0x2D22, 0x2D23, 0x2D24, 0x2D25, 0x2D27, 0x2D2D, 0xA641, 0xA643, 0xA645, 0xA647, 0xA649, 0xA64B, 0xA64D, 0xA64F, 0xA651, 0xA653, 0xA655, 0xA657, 0xA659, 0xA65B, 0xA65D, 0xA65F, 0xA661, 0xA663, 0xA665, 0xA667, 0xA669, 0xA66B, 0xA66D, 0xA681, 0xA683, 0xA685, 0xA687, 0xA689, 0xA68B, 0xA68D, 0xA68F, 0xA691, 0xA693, 0xA695, 0xA697, 0xA699, 0xA69B, 0xA723, 0xA725, 0xA727, 0xA729, 0xA72B, 0xA72D, 0xA72F, 0xA730, 0xA731, 0xA733, 0xA735, 0xA737, 0xA739, 0xA73B, 0xA73D, 0xA73F, 0xA741, 0xA743, 0xA745, 0xA747, 0xA749, 0xA74B, 0xA74D, 0xA74F, 0xA751, 0xA753, 0xA755, 0xA757, 0xA759, 0xA75B, 0xA75D, 0xA75F, 0xA761, 0xA763, 0xA765, 0xA767, 0xA769, 0xA76B, 0xA76D, 0xA76F, 0xA771, 0xA772, 0xA773, 0xA774, 0xA775, 0xA776, 0xA777, 0xA778, 0xA77A, 0xA77C, 0xA77F, 0xA781, 0xA783, 0xA785, 0xA787, 0xA78C, 0xA78E, 0xA791, 0xA793, 0xA794, 0xA795, 0xA797, 0xA799, 0xA79B, 0xA79D, 0xA79F, 0xA7A1, 0xA7A3, 0xA7A5, 0xA7A7, 0xA7A9, 0xA7B5, 0xA7B7, 0xA7FA, 0xAB30, 0xAB31, 0xAB32, 0xAB33, 0xAB34, 0xAB35, 0xAB36, 0xAB37, 0xAB38, 0xAB39, 0xAB3A, 0xAB3B, 0xAB3C, 0xAB3D, 0xAB3E, 0xAB3F, 0xAB40, 0xAB41, 0xAB42, 0xAB43, 0xAB44, 0xAB45, 0xAB46, 0xAB47, 0xAB48, 0xAB49, 0xAB4A, 0xAB4B, 0xAB4C, 0xAB4D, 0xAB4E, 0xAB4F, 0xAB50, 0xAB51, 0xAB52, 0xAB53, 0xAB54, 0xAB55, 0xAB56, 0xAB57, 0xAB58, 0xAB59, 0xAB5A, 0xAB60, 0xAB61, 0xAB62, 0xAB63, 0xAB64, 0xAB65, 0xAB70, 0xAB71, 0xAB72, 0xAB73, 0xAB74, 0xAB75, 0xAB76, 0xAB77, 0xAB78, 0xAB79, 0xAB7A, 0xAB7B, 0xAB7C, 0xAB7D, 0xAB7E, 0xAB7F, 0xAB80, 0xAB81, 0xAB82, 0xAB83, 0xAB84, 0xAB85, 0xAB86, 0xAB87, 0xAB88, 0xAB89, 0xAB8A, 0xAB8B, 0xAB8C, 0xAB8D, 0xAB8E, 0xAB8F, 0xAB90, 0xAB91, 0xAB92, 0xAB93, 0xAB94, 0xAB95, 0xAB96, 0xAB97, 0xAB98, 0xAB99, 0xAB9A, 0xAB9B, 0xAB9C, 0xAB9D, 0xAB9E, 0xAB9F, 0xABA0, 0xABA1, 0xABA2, 0xABA3, 0xABA4, 0xABA5, 0xABA6, 0xABA7, 0xABA8, 0xABA9, 0xABAA, 0xABAB, 0xABAC, 0xABAD, 0xABAE, 0xABAF, 0xABB0, 0xABB1, 0xABB2, 0xABB3, 0xABB4, 0xABB5, 0xABB6, 0xABB7, 0xABB8, 0xABB9, 0xABBA, 0xABBB, 0xABBC, 0xABBD, 0xABBE, 0xABBF, 0xFB00, 0xFB01, 0xFB02, 0xFB03, 0xFB04, 0xFB05, 0xFB06, 0xFB13, 0xFB14, 0xFB15, 0xFB16, 0xFB17, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0x10428, 0x10429, 0x1042A, 0x1042B, 0x1042C, 0x1042D, 0x1042E, 0x1042F, 0x10430, 0x10431, 0x10432, 0x10433, 0x10434, 0x10435, 0x10436, 0x10437, 0x10438, 0x10439, 0x1043A, 0x1043B, 0x1043C, 0x1043D, 0x1043E, 0x1043F, 0x10440, 0x10441, 0x10442, 0x10443, 0x10444, 0x10445, 0x10446, 0x10447, 0x10448, 0x10449, 0x1044A, 0x1044B, 0x1044C, 0x1044D, 0x1044E, 0x1044F, 0x10CC0, 0x10CC1, 0x10CC2, 0x10CC3, 0x10CC4, 0x10CC5, 0x10CC6, 0x10CC7, 0x10CC8, 0x10CC9, 0x10CCA, 0x10CCB, 0x10CCC, 0x10CCD, 0x10CCE, 0x10CCF, 0x10CD0, 0x10CD1, 0x10CD2, 0x10CD3, 0x10CD4, 0x10CD5, 0x10CD6, 0x10CD7, 0x10CD8, 0x10CD9, 0x10CDA, 0x10CDB, 0x10CDC, 0x10CDD, 0x10CDE, 0x10CDF, 0x10CE0, 0x10CE1, 0x10CE2, 0x10CE3, 0x10CE4, 0x10CE5, 0x10CE6, 0x10CE7, 0x10CE8, 0x10CE9, 0x10CEA, 0x10CEB, 0x10CEC, 0x10CED, 0x10CEE, 0x10CEF, 0x10CF0, 0x10CF1, 0x10CF2, 0x118C0, 0x118C1, 0x118C2, 0x118C3, 0x118C4, 0x118C5, 0x118C6, 0x118C7, 0x118C8, 0x118C9, 0x118CA, 0x118CB, 0x118CC, 0x118CD, 0x118CE, 0x118CF, 0x118D0, 0x118D1, 0x118D2, 0x118D3, 0x118D4, 0x118D5, 0x118D6, 0x118D7, 0x118D8, 0x118D9, 0x118DA, 0x118DB, 0x118DC, 0x118DD, 0x118DE, 0x118DF, 0x1D41A, 0x1D41B, 0x1D41C, 0x1D41D, 0x1D41E, 0x1D41F, 0x1D420, 0x1D421, 0x1D422, 0x1D423, 0x1D424, 0x1D425, 0x1D426, 0x1D427, 0x1D428, 0x1D429, 0x1D42A, 0x1D42B, 0x1D42C, 0x1D42D, 0x1D42E, 0x1D42F, 0x1D430, 0x1D431, 0x1D432, 0x1D433, 0x1D44E, 0x1D44F, 0x1D450, 0x1D451, 0x1D452, 0x1D453, 0x1D454, 0x1D456, 0x1D457, 0x1D458, 0x1D459, 0x1D45A, 0x1D45B, 0x1D45C, 0x1D45D, 0x1D45E, 0x1D45F, 0x1D460, 0x1D461, 0x1D462, 0x1D463, 0x1D464, 0x1D465, 0x1D466, 0x1D467, 0x1D482, 0x1D483, 0x1D484, 0x1D485, 0x1D486, 0x1D487, 0x1D488, 0x1D489, 0x1D48A, 0x1D48B, 0x1D48C, 0x1D48D, 0x1D48E, 0x1D48F, 0x1D490, 0x1D491, 0x1D492, 0x1D493, 0x1D494, 0x1D495, 0x1D496, 0x1D497, 0x1D498, 0x1D499, 0x1D49A, 0x1D49B, 0x1D4B6, 0x1D4B7, 0x1D4B8, 0x1D4B9, 0x1D4BB, 0x1D4BD, 0x1D4BE, 0x1D4BF, 0x1D4C0, 0x1D4C1, 0x1D4C2, 0x1D4C3, 0x1D4C5, 0x1D4C6, 0x1D4C7, 0x1D4C8, 0x1D4C9, 0x1D4CA, 0x1D4CB, 0x1D4CC, 0x1D4CD, 0x1D4CE, 0x1D4CF, 0x1D4EA, 0x1D4EB, 0x1D4EC, 0x1D4ED, 0x1D4EE, 0x1D4EF, 0x1D4F0, 0x1D4F1, 0x1D4F2, 0x1D4F3, 0x1D4F4, 0x1D4F5, 0x1D4F6, 0x1D4F7, 0x1D4F8, 0x1D4F9, 0x1D4FA, 0x1D4FB, 0x1D4FC, 0x1D4FD, 0x1D4FE, 0x1D4FF, 0x1D500, 0x1D501, 0x1D502, 0x1D503, 0x1D51E, 0x1D51F, 0x1D520, 0x1D521, 0x1D522, 0x1D523, 0x1D524, 0x1D525, 0x1D526, 0x1D527, 0x1D528, 0x1D529, 0x1D52A, 0x1D52B, 0x1D52C, 0x1D52D, 0x1D52E, 0x1D52F, 0x1D530, 0x1D531, 0x1D532, 0x1D533, 0x1D534, 0x1D535, 0x1D536, 0x1D537, 0x1D552, 0x1D553, 0x1D554, 0x1D555, 0x1D556, 0x1D557, 0x1D558, 0x1D559, 0x1D55A, 0x1D55B, 0x1D55C, 0x1D55D, 0x1D55E, 0x1D55F, 0x1D560, 0x1D561, 0x1D562, 0x1D563, 0x1D564, 0x1D565, 0x1D566, 0x1D567, 0x1D568, 0x1D569, 0x1D56A, 0x1D56B, 0x1D586, 0x1D587, 0x1D588, 0x1D589, 0x1D58A, 0x1D58B, 0x1D58C, 0x1D58D, 0x1D58E, 0x1D58F, 0x1D590, 0x1D591, 0x1D592, 0x1D593, 0x1D594, 0x1D595, 0x1D596, 0x1D597, 0x1D598, 0x1D599, 0x1D59A, 0x1D59B, 0x1D59C, 0x1D59D, 0x1D59E, 0x1D59F, 0x1D5BA, 0x1D5BB, 0x1D5BC, 0x1D5BD, 0x1D5BE, 0x1D5BF, 0x1D5C0, 0x1D5C1, 0x1D5C2, 0x1D5C3, 0x1D5C4, 0x1D5C5, 0x1D5C6, 0x1D5C7, 0x1D5C8, 0x1D5C9, 0x1D5CA, 0x1D5CB, 0x1D5CC, 0x1D5CD, 0x1D5CE, 0x1D5CF, 0x1D5D0, 0x1D5D1, 0x1D5D2, 0x1D5D3, 0x1D5EE, 0x1D5EF, 0x1D5F0, 0x1D5F1, 0x1D5F2, 0x1D5F3, 0x1D5F4, 0x1D5F5, 0x1D5F6, 0x1D5F7, 0x1D5F8, 0x1D5F9, 0x1D5FA, 0x1D5FB, 0x1D5FC, 0x1D5FD, 0x1D5FE, 0x1D5FF, 0x1D600, 0x1D601, 0x1D602, 0x1D603, 0x1D604, 0x1D605, 0x1D606, 0x1D607, 0x1D622, 0x1D623, 0x1D624, 0x1D625, 0x1D626, 0x1D627, 0x1D628, 0x1D629, 0x1D62A, 0x1D62B, 0x1D62C, 0x1D62D, 0x1D62E, 0x1D62F, 0x1D630, 0x1D631, 0x1D632, 0x1D633, 0x1D634, 0x1D635, 0x1D636, 0x1D637, 0x1D638, 0x1D639, 0x1D63A, 0x1D63B, 0x1D656, 0x1D657, 0x1D658, 0x1D659, 0x1D65A, 0x1D65B, 0x1D65C, 0x1D65D, 0x1D65E, 0x1D65F, 0x1D660, 0x1D661, 0x1D662, 0x1D663, 0x1D664, 0x1D665, 0x1D666, 0x1D667, 0x1D668, 0x1D669, 0x1D66A, 0x1D66B, 0x1D66C, 0x1D66D, 0x1D66E, 0x1D66F, 0x1D68A, 0x1D68B, 0x1D68C, 0x1D68D, 0x1D68E, 0x1D68F, 0x1D690, 0x1D691, 0x1D692, 0x1D693, 0x1D694, 0x1D695, 0x1D696, 0x1D697, 0x1D698, 0x1D699, 0x1D69A, 0x1D69B, 0x1D69C, 0x1D69D, 0x1D69E, 0x1D69F, 0x1D6A0, 0x1D6A1, 0x1D6A2, 0x1D6A3, 0x1D6A4, 0x1D6A5, 0x1D6C2, 0x1D6C3, 0x1D6C4, 0x1D6C5, 0x1D6C6, 0x1D6C7, 0x1D6C8, 0x1D6C9, 0x1D6CA, 0x1D6CB, 0x1D6CC, 0x1D6CD, 0x1D6CE, 0x1D6CF, 0x1D6D0, 0x1D6D1, 0x1D6D2, 0x1D6D3, 0x1D6D4, 0x1D6D5, 0x1D6D6, 0x1D6D7, 0x1D6D8, 0x1D6D9, 0x1D6DA, 0x1D6DC, 0x1D6DD, 0x1D6DE, 0x1D6DF, 0x1D6E0, 0x1D6E1, 0x1D6FC, 0x1D6FD, 0x1D6FE, 0x1D6FF, 0x1D700, 0x1D701, 0x1D702, 0x1D703, 0x1D704, 0x1D705, 0x1D706, 0x1D707, 0x1D708, 0x1D709, 0x1D70A, 0x1D70B, 0x1D70C, 0x1D70D, 0x1D70E, 0x1D70F, 0x1D710, 0x1D711, 0x1D712, 0x1D713, 0x1D714, 0x1D716, 0x1D717, 0x1D718, 0x1D719, 0x1D71A, 0x1D71B, 0x1D736, 0x1D737, 0x1D738, 0x1D739, 0x1D73A, 0x1D73B, 0x1D73C, 0x1D73D, 0x1D73E, 0x1D73F, 0x1D740, 0x1D741, 0x1D742, 0x1D743, 0x1D744, 0x1D745, 0x1D746, 0x1D747, 0x1D748, 0x1D749, 0x1D74A, 0x1D74B, 0x1D74C, 0x1D74D, 0x1D74E, 0x1D750, 0x1D751, 0x1D752, 0x1D753, 0x1D754, 0x1D755, 0x1D770, 0x1D771, 0x1D772, 0x1D773, 0x1D774, 0x1D775, 0x1D776, 0x1D777, 0x1D778, 0x1D779, 0x1D77A, 0x1D77B, 0x1D77C, 0x1D77D, 0x1D77E, 0x1D77F, 0x1D780, 0x1D781, 0x1D782, 0x1D783, 0x1D784, 0x1D785, 0x1D786, 0x1D787, 0x1D788, 0x1D78A, 0x1D78B, 0x1D78C, 0x1D78D, 0x1D78E, 0x1D78F, 0x1D7AA, 0x1D7AB, 0x1D7AC, 0x1D7AD, 0x1D7AE, 0x1D7AF, 0x1D7B0, 0x1D7B1, 0x1D7B2, 0x1D7B3, 0x1D7B4, 0x1D7B5, 0x1D7B6, 0x1D7B7, 0x1D7B8, 0x1D7B9, 0x1D7BA, 0x1D7BB, 0x1D7BC, 0x1D7BD, 0x1D7BE, 0x1D7BF, 0x1D7C0, 0x1D7C1, 0x1D7C2, 0x1D7C4, 0x1D7C5, 0x1D7C6, 0x1D7C7, 0x1D7C8, 0x1D7C9, 0x1D7CB\n])\n"
  },
  {
    "__docId__": 19,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/en-UK/html.js",
    "memberof": null,
    "longname": "src/rules/en-UK/html.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../../typography-fixer'\nimport html from '../html'\n\nlet enUK_HTML\n\n/**\n * The ruleset for HTML improvement on english typography\n *\n * It includes rules for:\n *\n * - wrapping ordinal numbers suffix in a `<span>` with the `ord` class\n *\n * Finally, the following rulesets are also included:\n *\n * - {@link src/rules/html.js~html}\n *\n * @type {Array<Object>}\n */\nexport default enUK_HTML = createRuleset()\n\nfunction createRuleset () {\n  return group('en-UK.html', [\n    html,\n    rule('ordinalNumbers', /(\\d)(st|nd|rd|th)/, '$1<span class=\"ord\">$2</span>')\n  ])\n}\n"
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "enUK_HTML",
    "memberof": "src/rules/en-UK/html.js",
    "longname": "src/rules/en-UK/html.js~enUK_HTML",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/en-UK/html.js",
    "importStyle": "enUK_HTML",
    "description": "The ruleset for HTML improvement on english typography\n\nIt includes rules for:\n\n- wrapping ordinal numbers suffix in a `<span>` with the `ord` class\n\nFinally, the following rulesets are also included:\n\n- {@link src/rules/html.js~html}",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 21,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/en-UK/html.js",
    "longname": "src/rules/en-UK/html.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/en-UK/html.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/en-UK/index.js",
    "memberof": null,
    "longname": "src/rules/en-UK/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../../typography-fixer'\nimport {currenciesRegExp} from '../../constants'\nimport punctuations from '../punctuations'\nimport fractions from '../fractions'\nimport symbols from '../symbols'\nimport units from '../units'\n\nlet enUK\n\n/**\n * The ruleset for english typography in the United Kingdom.\n *\n * It's hard to find a single, universally adopted, typographic styleguide\n * for english, so this ruleset try to rely only on commonly used rules.\n *\n * This ruleset includes:\n *\n * - Replacing hyphen between numbers such as in `1939-45` by an en-dash\n * - Replacing hyphen between words with an em-dash\n * - Removing a period placed after abbreviations such as `Mr` or `Dr`\n * - Replacing quotes after a number by the corresponding prime\n * - Replacing single quotes in words with typographic ones\n * - Replacing double quotes around a sentence with typographic ones\n * - Replacing `No.` and other variations before a number by `№`\n * - Moving punctuations after a quotation mark into it\n * - Collapsing multiple spaces into a single one\n * - Removing spaces before `,`, `.`, `)`, `…`, `’`, `”`, `?`, `!`, `;`, `%`,\n *   `‰`, `‱`, and `:`\n * - Removing spaces after `“`, `(`, and `’` but only if it is not preceded by\n *   a `s`\n * - Removing spaces around an en-dash placed between two numbers\n * - Removing spaces between a currency\n * - Adding spaces around an en-dash placed between two words\n * - Adding a space after `,`, `.`, `?`, `!`, `;`, `%`, `‰`, `‱`, `)`, and `:`\n * - Adding a non-breaking space after a `№`\n * - Adding a non-breaking space between an honorific and a name\n *\n * Finally, the following rulesets are also included:\n *\n * - {@link src/rules/punctuations.js~punctuations}\n * - {@link src/rules/fractions.js~fractions}\n * - {@link src/rules/symbols.js~symbols}\n * - {@link src/rules/units.js~units}\n *\n * @see http://typophile.com/files/typography_rules.pdf\n * @see http://j.poitou.free.fr/pro/html/typ/anglais.html\n * @type {Array<Object>}\n */\nexport default enUK = createRuleset()\n\nfunction createRuleset () {\n  return group('en-UK', [\n    units,\n    symbols,\n    fractions,\n    punctuations,\n    group('punctuations', [\n      rule('enDashBetweenWords', /(\\D\\x20)-(\\x20\\D)/, '$1\\u2013$2'),\n      rule('enDashBetweenNumbers', /(\\d)\\s*(?:-|\\u2011)\\s*(\\d)/, '$1\\u2013$2'),\n      rule('noPeriodAfterAbbr', /\\b(Mr|Ms|Mrs|Prof|Dr)\\./, '$1')\n    ]),\n    group('quotes', [\n      rule('singlePrime', /(\\d)'/, '$1\\u2032'),\n      rule('doublePrime', /(\\d)\"/, '$1\\u2033'),\n      rule('singleQuote', /(\\w)'(\\w)/, '$1\\u2019$2'),\n      rule('doubleQuote', /\"([^\"]+)\"/, '\\u201c$1\\u201d'),\n      rule('punctuationAfterQuote', /(\\u201d)(\\.|,)/, '$2$1')\n    ]),\n    group('spaces', [\n      rule('collapseMultipleSpaces', /\\x20{2,}/, ' '),\n      rule('noSpaceBeforePunctuation', /\\s+(\\.|,|;|:|!|\\?|%|\\)|\\u2019|\\u2026|\\u2030|\\u2031)/, '$1'),\n      rule('noSpaceAfterParenthesis', /(\\()\\s+/, '$1'),\n      rule('noSpaceAfterQuote', /([^s])(\\u2019)\\s+/, '$1$2'),\n      rule('noSpaceAroundEnDashBetweenNumbers', /(\\d)\\s*\\u2013\\s*(\\d)/, '$1\\u2013$2'),\n      rule('spaceAfterPunctuation', /(,|;|!|\\?|%|\\u2026|\\u2030|\\u2031)([^\\s\\)])/, '$1 $2'),\n      rule('spaceAfterPeriodOrColon', /(\\D)(\\.|:)([^\\s\\)])/, '$1$2 $3'),\n      rule('noSpaceAroundEmDash', /\\s*(\\u2014)\\s*/, '$1'),\n      rule('noSpaceAfterLeftQuote', /(\\u201c)\\s*(\\S)/, '$1$2'),\n      rule('noSpaceAfterCurrency', `([${currenciesRegExp}])\\\\s*(\\\\d)`, '$1$2'),\n      rule('noSpaceBeforeRightQuote', /(\\S)\\s*(\\u201d)/, '$1$2'),\n      rule('spaceAroundEnDash', /([^\\d\\s])\\x20*(\\u2013)\\x20*(\\D)/, '$1\\u00a0$2 $3'),\n      rule('spaceAfterParenthesis', /(\\))(\\w)/, '$1 $2'),\n      rule('spaceBeforeParenthesis', /(\\S)(\\()/, '$1 $2'),\n      rule('nonBreakingSpaceAfterHonorific', /(Mr|Mrs|Ms|Miss|Sir|Lady)\\s([A-Z])/, '$1\\u00a0$2'),\n      rule('nonBreakingSpaceAfterNumeroSign', /(\\u2116)\\s*(\\d)/, '$1\\u00a0$2')\n    ]),\n    group('abbr', [\n      rule('numeroSign', /(?:N|n)o\\.\\s*(\\d)/, '\\u2116\\u00a0$1')\n    ])\n  ])\n}\n"
  },
  {
    "__docId__": 23,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "enUK",
    "memberof": "src/rules/en-UK/index.js",
    "longname": "src/rules/en-UK/index.js~enUK",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/en-UK/index.js",
    "importStyle": "enUK",
    "description": "The ruleset for english typography in the United Kingdom.\n\nIt's hard to find a single, universally adopted, typographic styleguide\nfor english, so this ruleset try to rely only on commonly used rules.\n\nThis ruleset includes:\n\n- Replacing hyphen between numbers such as in `1939-45` by an en-dash\n- Replacing hyphen between words with an em-dash\n- Removing a period placed after abbreviations such as `Mr` or `Dr`\n- Replacing quotes after a number by the corresponding prime\n- Replacing single quotes in words with typographic ones\n- Replacing double quotes around a sentence with typographic ones\n- Replacing `No.` and other variations before a number by `№`\n- Moving punctuations after a quotation mark into it\n- Collapsing multiple spaces into a single one\n- Removing spaces before `,`, `.`, `)`, `…`, `’`, `”`, `?`, `!`, `;`, `%`,\n  `‰`, `‱`, and `:`\n- Removing spaces after `“`, `(`, and `’` but only if it is not preceded by\n  a `s`\n- Removing spaces around an en-dash placed between two numbers\n- Removing spaces between a currency\n- Adding spaces around an en-dash placed between two words\n- Adding a space after `,`, `.`, `?`, `!`, `;`, `%`, `‰`, `‱`, `)`, and `:`\n- Adding a non-breaking space after a `№`\n- Adding a non-breaking space between an honorific and a name\n\nFinally, the following rulesets are also included:\n\n- {@link src/rules/punctuations.js~punctuations}\n- {@link src/rules/fractions.js~fractions}\n- {@link src/rules/symbols.js~symbols}\n- {@link src/rules/units.js~units}",
    "see": [
      "http://typophile.com/files/typography_rules.pdf",
      "http://j.poitou.free.fr/pro/html/typ/anglais.html"
    ],
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 24,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/en-UK/index.js",
    "longname": "src/rules/en-UK/index.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/en-UK/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/es-ES/index.js",
    "memberof": null,
    "longname": "src/rules/es-ES/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../../typography-fixer'\nimport {currenciesRegExp} from '../../constants'\nimport punctuations from '../punctuations'\nimport fractions from '../fractions'\nimport symbols from '../symbols'\nimport units from '../units'\n\nlet esES\n\n/**\n * The ruleset for spanish typography.\n *\n * This ruleset includes:\n *\n * - Replacing consecutive `¡` or `¿` characters by a single one\n * - Replacing single quotes in words with typographic ones\n * - Replacing double quotes around a sentence with typographic ones\n * - Removing spaces before `,`, `.`, `)`, `…`, `’`, `”`, `;`, `%`, `‰`, `‱`,\n *   and `:`\n * - Removing spaces after `“`, `(`, and `’`\n * - Removing spaces around an en-dash placed between two numbers\n * - Removing spaces between a currency\n * - Adding spaces around an en-dash placed between two words\n * - Adding a space after `,`, `.`, `;`, `%`, `‰`, `‱`, `)`, and `:`\n * - Adding a thin non-breaking space after a `¡` or a `¿`\n * - Adding a thin non-breaking space before a `!` or a `?`\n *\n * Finally, the following rulesets are also included:\n *\n * - {@link src/rules/punctuations.js~punctuations}\n * - {@link src/rules/fractions.js~fractions}\n * - {@link src/rules/symbols.js~symbols}\n * - {@link src/rules/units.js~units}\n *\n * @type {Array<Object>}\n */\nexport default esES = createRuleset()\n\nfunction createRuleset () {\n  return group('es-ES', [\n    units,\n    symbols,\n    fractions,\n    punctuations,\n    group('punctuations', [\n      rule('collapseMultiplePunctuation', /([¡¿])\\1+/, '$1'),\n    ]),\n    group('quotes', [\n      rule('singleQuote', /(\\w)'(\\w)/, '$1\\u2019$2'),\n      rule('doubleQuote', /\"([^\"]+)\"/, '\\u00ab$1\\u00bb')\n    ]),\n    group('spaces', [\n      rule('nonBreakingSpaceBeforePunctuation', /(\\S)(?:\\x20)?([?!])/, '$1\\u202F$2'),\n      rule('nonBreakingSpaceAfterPunctuation', /([¿¡])\\x20*(\\S)/, '$1\\u202F$2'),\n      rule('noSpaceBeforePunctuation', /\\s+(\\.|,|;|:|%|\\)|\\u2019|\\u2026|\\u2030|\\u2031)/, '$1'),\n      rule('noSpaceAfterPunctuation', /(\\u2019|\\()\\s+/, '$1'),\n      rule('noSpaceAroundEnDashBetweenNumbers', /(\\d)\\s*\\u2013\\s*(\\d)/, '$1\\u2013$2'),\n      rule('spaceAroundEnDash', /([^\\d\\s])\\x20*(\\u2013)\\x20*(\\D)/, '$1\\u00a0$2 $3'),\n      rule('spaceAfterPunctuation', /(\\.|;|!|\\?|%|\\u2026|\\u2030|\\u2031)([^\\s\\)])/, '$1 $2'),\n      rule('spaceAfterColon', /(\\D\\s?)(:)([^\\s\\)])/, '$1$2 $3'),\n      rule('spaceAfterComma', /(\\D)(,)([^\\s\\)])/, '$1$2 $3'),\n      rule('spaceAfterLeftQuote', /(\\u00ab)\\x20*(\\S)/, '$1\\u202F$2'),\n      rule('spaceBeforeRightQuote', /(\\S)\\x20*(\\u00bb)/, '$1\\u202F$2'),\n      rule('spaceAfterParenthesis', /(\\))(\\w)/, '$1 $2'),\n      rule('spaceBeforeParenthesis', /(\\S)(\\()/, '$1 $2'),\n      rule('spaceBeforeCurrency', `(\\\\d)\\x20?([${currenciesRegExp}])`, '$1\\u00a0$2'),\n    ])\n  ])\n}\n"
  },
  {
    "__docId__": 26,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "esES",
    "memberof": "src/rules/es-ES/index.js",
    "longname": "src/rules/es-ES/index.js~esES",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/es-ES/index.js",
    "importStyle": "esES",
    "description": "The ruleset for spanish typography.\n\nThis ruleset includes:\n\n- Replacing consecutive `¡` or `¿` characters by a single one\n- Replacing single quotes in words with typographic ones\n- Replacing double quotes around a sentence with typographic ones\n- Removing spaces before `,`, `.`, `)`, `…`, `’`, `”`, `;`, `%`, `‰`, `‱`,\n  and `:`\n- Removing spaces after `“`, `(`, and `’`\n- Removing spaces around an en-dash placed between two numbers\n- Removing spaces between a currency\n- Adding spaces around an en-dash placed between two words\n- Adding a space after `,`, `.`, `;`, `%`, `‰`, `‱`, `)`, and `:`\n- Adding a thin non-breaking space after a `¡` or a `¿`\n- Adding a thin non-breaking space before a `!` or a `?`\n\nFinally, the following rulesets are also included:\n\n- {@link src/rules/punctuations.js~punctuations}\n- {@link src/rules/fractions.js~fractions}\n- {@link src/rules/symbols.js~symbols}\n- {@link src/rules/units.js~units}",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 27,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/es-ES/index.js",
    "longname": "src/rules/es-ES/index.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/es-ES/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/fr-FR/html.js",
    "memberof": null,
    "longname": "src/rules/fr-FR/html.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../../typography-fixer'\nimport html from '../html'\n\nlet frFR_HTML\n\n/**\n * The ruleset for HTML improvement on french typography\n *\n * It includes rules for:\n *\n * - Wrapping ends of common abbreviation in a `<sup>` tag so that `Mmes`\n *   becomes `M<sup>mes</sup>`\n * - Wrapping ordinal number suffix in a `<sup>` tag\n *\n * Finally, the following rulesets are also included:\n *\n * - {@link src/rules/html.js~html}\n *\n * @type {Array<Object>}\n */\nexport default frFR_HTML = createRuleset()\n\nfunction createRuleset () {\n  return group('fr-FR.html', [\n    html,\n    rule('abbrWithSuperText', /Mmes|Mme|Mlles|Mlle|Me|Mgr|Dr|cie|Cie|Sté/, (m) => {\n      return `${m[0]}<sup>${m.slice(1, m.length)}</sup>`\n    }),\n    rule('ordinalNumbers', /(\\d)(res|re|es|e|èmes)/, '$1<sup class=\"ord\">$2</sup>')\n  ])\n}\n"
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "frFR_HTML",
    "memberof": "src/rules/fr-FR/html.js",
    "longname": "src/rules/fr-FR/html.js~frFR_HTML",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/fr-FR/html.js",
    "importStyle": "frFR_HTML",
    "description": "The ruleset for HTML improvement on french typography\n\nIt includes rules for:\n\n- Wrapping ends of common abbreviation in a `<sup>` tag so that `Mmes`\n  becomes `M<sup>mes</sup>`\n- Wrapping ordinal number suffix in a `<sup>` tag\n\nFinally, the following rulesets are also included:\n\n- {@link src/rules/html.js~html}",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 30,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/fr-FR/html.js",
    "longname": "src/rules/fr-FR/html.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/fr-FR/html.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/fr-FR/index.js",
    "memberof": null,
    "longname": "src/rules/fr-FR/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../../typography-fixer'\nimport {currenciesRegExp} from '../../constants'\nimport punctuations from '../punctuations'\nimport fractions from '../fractions'\nimport symbols from '../symbols'\nimport units from '../units'\n\nlet frFR\n\n/**\n * The ruleset for french typography.\n *\n * This ruleset is based on typographic rules from the Imprimerie Nationale\n * used for all publishing works in France.\n *\n * Some rules can't possibly be implemented so they're simply ignored. It's the\n * case for numbers below ten which should always be written in full text and\n * not with digits. Because there's an inflection of the word `un` according\n * to the gender of its noun when used as a determinant and given that there's\n * over 100 000 common nouns in french, with so many exceptions that the\n * gender can't be guessed from the spelling, implementing this rule would\n * mean integrating a complete french dictionary and a syntactic engine. No need\n * to say this is clearly out of the scope of this package.\n *\n * However a lot of rules can be and are implemented in this ruleset.\n * It includes:\n *\n * - Replacing `Mr` by `M.` (`Mr` is the english abbreviation for mister, french\n *   uses `M.`)\n * - Replacing possessive interrogative `a-t'il` with `a-t-il`\n * - Properly formatting `c.-à-d.` abbreviation\n * - Using a superscript `o` instead of `°` for `numéro` abbreviation\n * - Removing hyphen after `anti` unless the following word starts with a `i`\n *   or already contains an hyphen\n * - Replacing hyphen between numbers such as in `1939-45` by an en-dash\n * - Replacing hyphen between words such as in `Pierre - tu le connais, hein ? -\n *   est professeur de yoga` by an en-dash\n * - Replacing single quote in `L'arbre` with a typographic one (`’`)\n * - Replacing double quotes around a sentence with `«` and `»`\n * - Collapsing multiple spaces into a single one\n * - Removing spaces before `,`, `.`, `)`, `…` and `’`\n * - Removing spaces after `’` and `(`\n * - Removing spaces around an en-dash placed between two numbers\n * - Adding spaces around an en-dash placed between two words\n * - Adding a space before `(`\n * - Adding a non-breaking space between a number and a currency symbol\n * - Adding a non-breaking space after `«` and before `»`\n * - Adding a non-breaking space between an honorific and a name\n * - Adding a thin non-breaking space before `?`, `!`, `;`, `%`, `‰`, `‱`, and\n *   `:`\n * - Adding a space after `,`, `.`, `?`, `!`, `;`, `%`, `‰`, `‱`, `)`, and `:`\n * - Replacing invalid ordinal numbers such `1ère` by their proper form\n * - Enforcing lowercase for months and days names\n * - Enforcing use of ligatures for `ae` and `oe`\n *\n * Finally, the following rulesets are also included:\n *\n * - {@link src/rules/punctuations.js~punctuations}\n * - {@link src/rules/fractions.js~fractions}\n * - {@link src/rules/symbols.js~symbols}\n * - {@link src/rules/units.js~units}\n *\n * @see http://j.poitou.free.fr/pro/html/typ/typ-intro.html\n * @see http://gargas.biomedicale.univ-paris5.fr/lt/typo.html\n * @type {Array<Object>}\n */\nexport default frFR = createRuleset()\n\nfunction createRuleset () {\n  return group('fr-FR', [\n    units,\n    symbols,\n    fractions,\n    punctuations,\n    group('punctuations', [\n      rule('maleHonorific', /Mr\\.?/, 'M.'),\n      rule('possessiveInterrogative', /a(-|\\u2011)t'il/, 'a\\u2011t\\u2011il'),\n      rule('cad', /c\\.?(-|\\u2011)?[aà](-|\\u2011)?d\\.?/, 'c.\\u2011à\\u2011d.'),\n      rule('numberAbbr', /(n|N)°/, '$1\\u00ba'),\n      rule('enDashBetweenWords', /(\\D\\x20)-(\\x20\\D)/, '$1\\u2013$2'),\n      rule('enDashBetweenNumbers', /(\\d)\\s*(?:-|\\u2011)\\s*(\\d)/, '$1\\u2013$2'),\n      rule('anti', /anti(?:-|\\u2011)([^i]\\w+)(?!-|\\u2011)\\b/, 'anti$1')\n    ]),\n    group('quotes', [\n      rule('singleQuote', /(\\w)'(\\w)/, '$1\\u2019$2'),\n      rule('doubleQuote', /\"([^\"]+)\"/, '\\u00ab$1\\u00bb')\n    ]),\n    group('spaces', [\n      rule('collapseMultipleSpaces', /\\x20{2,}/, ' '),\n      rule('noSpaceBeforePunctuation', /\\s+(,|\\.|\\)|\\u2026|\\u2019)/, '$1'),\n      rule('noSpaceAfterPunctuation', /(\\u2019|\\()\\s+/, '$1'),\n      rule('noSpaceAroundEnDashBetweenNumbers', /(\\d)\\s*\\u2013\\s*(\\d)/, '$1\\u2013$2'),\n      rule('nonBreakingSpaceBeforePunctuation', /(\\S)(?:\\x20)?([?!;%\\u2030\\u2031])/, '$1\\u202F$2'),\n      rule('nonBreakingSpaceBeforeColon', /([^\\s\\d])(?:\\x20)?(:)/, '$1\\u202F$2'),\n      rule('nonBreakingSpaceBeforeColonBetweenTwoNumbers1', /(\\d)\\s*(:)(\\s\\d)/, '$1\\u202F$2$3'),\n      rule('nonBreakingSpaceBeforeColonBetweenTwoNumbers2', /(\\d)\\s(:)(\\d)/, '$1\\u202F$2$3'),\n      rule('nonBreakingSpaceBeforeColonAfterNumber', /(\\d)\\s*(:)(\\D)/, '$1\\u202F$2$3'),\n      rule('spaceAfterPunctuation', /(;|!|\\?|%|\\u2026|\\u2030|\\u2031)([^\\s\\)])/, '$1 $2'),\n      rule('spaceAfterPeriod', /(\\.)([^\\)\\s-\\u2011])/, '$1 $2'),\n      rule('spaceAfterColon', /(\\D\\s?)(:)([^\\s\\)])/, '$1$2 $3'),\n      rule('spaceAfterComma', /(\\D)(,)([^\\s\\)])/, '$1$2 $3'),\n      rule('spaceAfterParenthesis', /(\\))(\\w)/, '$1 $2'),\n      rule('spaceBeforeParenthesis', /(\\S)(\\()/, '$1 $2'),\n      rule('spaceBeforeCurrency', `(\\\\d)\\x20?([${currenciesRegExp}])`, '$1\\u00a0$2'),\n      rule('spaceAroundEnDash', /([^\\d\\s])\\x20*(\\u2013)\\x20*(\\D)/, '$1\\u00a0$2 $3'),\n      rule('spaceAfterLeftQuote', /(\\u00ab)\\x20*(\\S)/, '$1\\u202F$2'),\n      rule('spaceBeforeRightQuote', /(\\S)\\x20*(\\u00bb)/, '$1\\u202F$2'),\n      rule('nonBreakingSpaceAfterHonorific', /(MM\\.|M\\.|Mme|Mmes|Mlle|Mlles|Dr|Me|Mgr)\\x20([A-Z])/, '$1\\u00a0$2')\n    ]),\n    group('ordinal', [\n      rule('greaterThan10', /(\\d{2,})emes\\b/, '$1èmes'),\n      rule('firstFemalePlural', /(\\d{1})[èe]res\\b/, '$1res'),\n      rule('lowerThan10', /((^|[^\\d])\\d)[èe]mes\\b/, '$1es'),\n      rule('firstFemale', /(\\d)[èe]re\\b/, '$1re'),\n      rule('firstMale', /(\\d)[èe]me(?!s)\\b/, '$1e')\n    ]),\n    group('datetime', [\n      rule('daysAndMonths', /(Lundi|Mardi|Mercredi|Jeudi|Vendredi|Samedi|Dimanche|Janvier|Février|Mars|Avril|Mai|Juin|Juillet|Aout|Septembre|Octobre|Novembre|Décembre)/, (s) => {\n        return s.toLowerCase()\n      })\n    ]),\n    group('ligatures', [\n      rule('lowerOe', /oe/, '\\u0153'),\n      rule('upperOe', /O[eE]/, '\\u0152'),\n      rule('lowerAe', /ae/, '\\u00e6'),\n      rule('upperAe', /A[eE]/, '\\u00c6')\n    ])\n  ])\n}\n"
  },
  {
    "__docId__": 32,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "frFR",
    "memberof": "src/rules/fr-FR/index.js",
    "longname": "src/rules/fr-FR/index.js~frFR",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/fr-FR/index.js",
    "importStyle": "frFR",
    "description": "The ruleset for french typography.\n\nThis ruleset is based on typographic rules from the Imprimerie Nationale\nused for all publishing works in France.\n\nSome rules can't possibly be implemented so they're simply ignored. It's the\ncase for numbers below ten which should always be written in full text and\nnot with digits. Because there's an inflection of the word `un` according\nto the gender of its noun when used as a determinant and given that there's\nover 100 000 common nouns in french, with so many exceptions that the\ngender can't be guessed from the spelling, implementing this rule would\nmean integrating a complete french dictionary and a syntactic engine. No need\nto say this is clearly out of the scope of this package.\n\nHowever a lot of rules can be and are implemented in this ruleset.\nIt includes:\n\n- Replacing `Mr` by `M.` (`Mr` is the english abbreviation for mister, french\n  uses `M.`)\n- Replacing possessive interrogative `a-t'il` with `a-t-il`\n- Properly formatting `c.-à-d.` abbreviation\n- Using a superscript `o` instead of `°` for `numéro` abbreviation\n- Removing hyphen after `anti` unless the following word starts with a `i`\n  or already contains an hyphen\n- Replacing hyphen between numbers such as in `1939-45` by an en-dash\n- Replacing hyphen between words such as in `Pierre - tu le connais, hein ? -\n  est professeur de yoga` by an en-dash\n- Replacing single quote in `L'arbre` with a typographic one (`’`)\n- Replacing double quotes around a sentence with `«` and `»`\n- Collapsing multiple spaces into a single one\n- Removing spaces before `,`, `.`, `)`, `…` and `’`\n- Removing spaces after `’` and `(`\n- Removing spaces around an en-dash placed between two numbers\n- Adding spaces around an en-dash placed between two words\n- Adding a space before `(`\n- Adding a non-breaking space between a number and a currency symbol\n- Adding a non-breaking space after `«` and before `»`\n- Adding a non-breaking space between an honorific and a name\n- Adding a thin non-breaking space before `?`, `!`, `;`, `%`, `‰`, `‱`, and\n  `:`\n- Adding a space after `,`, `.`, `?`, `!`, `;`, `%`, `‰`, `‱`, `)`, and `:`\n- Replacing invalid ordinal numbers such `1ère` by their proper form\n- Enforcing lowercase for months and days names\n- Enforcing use of ligatures for `ae` and `oe`\n\nFinally, the following rulesets are also included:\n\n- {@link src/rules/punctuations.js~punctuations}\n- {@link src/rules/fractions.js~fractions}\n- {@link src/rules/symbols.js~symbols}\n- {@link src/rules/units.js~units}",
    "see": [
      "http://j.poitou.free.fr/pro/html/typ/typ-intro.html",
      "http://gargas.biomedicale.univ-paris5.fr/lt/typo.html"
    ],
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 33,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/fr-FR/index.js",
    "longname": "src/rules/fr-FR/index.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/fr-FR/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 34,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/fractions.js",
    "memberof": null,
    "longname": "src/rules/fractions.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../typography-fixer'\nimport {vulgarFractions} from '../constants'\n\nlet fractions\n\n/**\n * A ruleset to replace vulgar fractions with their corresponding unicode\n * character.\n *\n * The following fractions are supported: `½`, `↉`, `⅓`, `⅔`, `¼`, `¾`, `⅕`,\n * `⅖`, `⅗`, `⅘`, `⅙`, `⅚`, `⅐`, `⅛`, `⅜`, `⅝`, `⅞`, `⅑` and `⅒`.\n *\n * @type {Array<Object>}\n */\nexport default fractions = createRuleset()\n\nfunction createRuleset () {\n  return group('fractions', vulgarFractions.map(([a,b,char]) => {\n    return rule(`${a}On${b}`, `\\\\b${a}\\\\s*/\\\\s*${b}\\\\b`, char)\n  }))\n}\n"
  },
  {
    "__docId__": 35,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fractions",
    "memberof": "src/rules/fractions.js",
    "longname": "src/rules/fractions.js~fractions",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/fractions.js",
    "importStyle": "fractions",
    "description": "A ruleset to replace vulgar fractions with their corresponding unicode\ncharacter.\n\nThe following fractions are supported: `½`, `↉`, `⅓`, `⅔`, `¼`, `¾`, `⅕`,\n`⅖`, `⅗`, `⅘`, `⅙`, `⅚`, `⅐`, `⅛`, `⅜`, `⅝`, `⅞`, `⅑` and `⅒`.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 36,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/fractions.js",
    "longname": "src/rules/fractions.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/fractions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/html.js",
    "memberof": null,
    "longname": "src/rules/html.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../typography-fixer'\n\nlet html\n\n/**\n * A common ruleset for HTML typographic enhancement.\n *\n * It includes rules for:\n *\n * - Wrapping double quotes in quotation marks in a span with the `dquo` class\n * - Wrapping ampersand in a span with the `amp` class\n * - Wrapping many consecutive capitals in a span with the `caps` class\n *\n * @type {Array<Object>}\n */\nexport default html = createRuleset()\n\nfunction createRuleset () {\n  return group('common', [\n    rule('quotes', /(\\u00ab|\\u00bb|\\u201c|\\u201d)/, '<span class=\"dquo\">$1</span>'),\n    rule('ampersand', /(&amp;|&)($|\\s)/, '<span class=\"amp\">$1</span>$2'),\n    rule('caps', /(([A-Z]\\.?){2,})/, '<span class=\"caps\">$1</span>')\n  ])\n}\n"
  },
  {
    "__docId__": 38,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "html",
    "memberof": "src/rules/html.js",
    "longname": "src/rules/html.js~html",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/html.js",
    "importStyle": "html",
    "description": "A common ruleset for HTML typographic enhancement.\n\nIt includes rules for:\n\n- Wrapping double quotes in quotation marks in a span with the `dquo` class\n- Wrapping ampersand in a span with the `amp` class\n- Wrapping many consecutive capitals in a span with the `caps` class",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 39,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/html.js",
    "longname": "src/rules/html.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/html.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/line-breaks.js",
    "memberof": null,
    "longname": "src/rules/line-breaks.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../typography-fixer'\n\nlet lineBreaks\n\n/**\n * A generic ruleset to improve line breaks.\n *\n * It includes rules for:\n *\n * - Adding a non-breaking space between a number and the word that follow\n * - Adding a non-breaking space after short words of three characters or less\n * - Adding a non-breaking space between the two last words of a paragraph\n *\n * @type {Array<Object>}\n */\nexport default lineBreaks = createRuleset()\n\nfunction createRuleset () {\n  return group('line-breaks', [\n    rule('numberBeforeWord', /(\\d)\\x20(\\D)/, '$1\\u00a0$2'),\n    rule('shortWords', /\\b(\\w{1,3})\\x20/, '$1\\u00a0'),\n    rule('lastParagraphWords', /(\\w+)\\x20(\\w+\\.)$/m, '$1\\u00a0$2')\n  ])\n}\n"
  },
  {
    "__docId__": 41,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "lineBreaks",
    "memberof": "src/rules/line-breaks.js",
    "longname": "src/rules/line-breaks.js~lineBreaks",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/line-breaks.js",
    "importStyle": "lineBreaks",
    "description": "A generic ruleset to improve line breaks.\n\nIt includes rules for:\n\n- Adding a non-breaking space between a number and the word that follow\n- Adding a non-breaking space after short words of three characters or less\n- Adding a non-breaking space between the two last words of a paragraph",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 42,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/line-breaks.js",
    "longname": "src/rules/line-breaks.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/line-breaks.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/punctuations.js",
    "memberof": null,
    "longname": "src/rules/punctuations.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../typography-fixer'\n\nlet punctuations\n\n/**\n * A ruleset to replace common punctuations mistake.\n *\n * It includes rules for:\n *\n * - Replacing consecutive `!` or `?` characters by a single one\n * - Replacing ellipsis after `etc` by a period\n * - Replacing three consecutive periods by an ellipsis character\n * - Replacing hyphen in a composed word by a non-breaking hyphen\n *\n * @type {Array<Object>}\n */\nexport default punctuations = createRuleset()\n\nfunction createRuleset () {\n  return group('punctuations.common', [\n    rule('collapseMultiplePunctuation', /([!?])\\1+/, '$1'),\n    rule('shortEtCaetera', /([Ee]tc)(\\.{3}|\\u2026)/, '$1.'),\n    rule('triplePeriods', /\\.{3,}/, '\\u2026'),\n    rule('nonBreakingHyphen', /(\\w)-(\\w)/, '$1\\u2011$2')\n  ])\n}\n"
  },
  {
    "__docId__": 44,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "punctuations",
    "memberof": "src/rules/punctuations.js",
    "longname": "src/rules/punctuations.js~punctuations",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/punctuations.js",
    "importStyle": "punctuations",
    "description": "A ruleset to replace common punctuations mistake.\n\nIt includes rules for:\n\n- Replacing consecutive `!` or `?` characters by a single one\n- Replacing ellipsis after `etc` by a period\n- Replacing three consecutive periods by an ellipsis character\n- Replacing hyphen in a composed word by a non-breaking hyphen",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 45,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/punctuations.js",
    "longname": "src/rules/punctuations.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/punctuations.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/symbols.js",
    "memberof": null,
    "longname": "src/rules/symbols.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../typography-fixer'\n\nlet symbols\n\n/**\n * A ruleset to replace common miswritten symbols.\n *\n * It includes rules for:\n *\n * - Replacing `(c)` or `(C)` with `©`\n * - Replacing `(r)` or `(R)` with `®`\n * - Replacing `TM` with `™`\n *\n * @type {Array<Object>}\n */\nexport default symbols = createRuleset()\n\nfunction createRuleset () {\n  return group('symbols', [\n    rule('copyright', /\\([cC]\\)/, '©'),\n    rule('trademark', /\\bTM\\b/, '™'),\n    rule('registered', /\\([rR]\\)/, '®')\n  ])\n}\n"
  },
  {
    "__docId__": 47,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "symbols",
    "memberof": "src/rules/symbols.js",
    "longname": "src/rules/symbols.js~symbols",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/symbols.js",
    "importStyle": "symbols",
    "description": "A ruleset to replace common miswritten symbols.\n\nIt includes rules for:\n\n- Replacing `(c)` or `(C)` with `©`\n- Replacing `(r)` or `(R)` with `®`\n- Replacing `TM` with `™`",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 48,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/symbols.js",
    "longname": "src/rules/symbols.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/symbols.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/rules/units.js",
    "memberof": null,
    "longname": "src/rules/units.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {rule, group} from '../typography-fixer'\nimport {allUnits, surfaceUnits, volumeUnits} from '../constants'\nimport lowercase from '../lowercase'\n\nlet units\n\n/**\n * The ruleset for measurement units formatting.\n *\n * The following units from the international units system are supported: `m`,\n * `m²`, `m³`, `g`, `s`, `l`, `L`, `K`, `W`, `V`, `Hz`, `Ω`, `A`, `mol`\n * and `cd`.\n *\n * All these units have derivations using the following prefixes: `y`, `z`, `a`,\n * `f`, `p`, `n`, `µ`, `m`, `c`, `d`, `da`, `h`, `k`, `M`, `G`, `T`, `P`, `E`,\n * `Z` and `Y`.\n *\n * Additionally, the following units are supported:\n *\n * - temperature: `°C`, `°F`, `°Ré`, `°N`, `°Ra`\n * - distance: `mi`, `in`, `ft`, `yd`, `nautical mile`\n * - speed: `kmph`, `km/h`, `mps`, `m/s`, `mph`, `mi/h`, `knot`,\n *   `nautical mile/h`, `ma`\n * - surface: `ha`, `a`, `ca`, `mile²`, `in²`, `yd²`, `ft²`, `ro`, `acre`,\n *   `nautical mile²`\n * - volume: `in³`, `ft³`, `yd³`, `gal`, `bbl`, `pt`, `fluid pt`, `dry pt`\n * - weight: `t`, `carat`, `grain`, `oz`, `lb`, `cwt`, `ton`, `st`\n * - data: `b`, `B`, and all the derivations using the international system\n *   prefixes\n * - time: `h`, `min`\n * - electric: `dBm`, `dBW`, `var`, `VA`, `F`, `H`, `S`, `C`, `Ah`, `J`, `kWh`,\n *   `eV`, `Ω∙m`, `S/m`, `V/m`, `N/C`, `V·m`, `T`, `G`, `Wb`, `dB`, `ppm`\n *\n * This ruleset includes rules for:\n *\n * - Replacing a `2` after a surface unit with `²`\n * - Replacing a `3` after a volumic unit with `³`\n * - Adding a non-breaking space between a number and the following unit\n * - Removing a period placed after the unit when it's not the end of a sentence\n *\n * @type {Array<Object>}\n * @see https://en.wikipedia.org/wiki/International_System_of_Units\n * @see http://physics.nist.gov/cuu/Units/checklist.html\n */\nexport default units = createRuleset()\n\nfunction createRuleset () {\n  return group('units', [\n    group('exponent', [\n      rule('surface', `(${surfaceUnits.join('|')})2`, '$1²'),\n      rule('volume', `(${volumeUnits.join('|')})3`, '$1³')\n    ]),\n    rule('unitSpace', `(\\\\d)\\\\s*(${allUnits.join('|')})(?=[\\\\.,\\\\)\\\\s]|$)`, '$1\\u202f$2'),\n    rule('noPeriodAfterUnit', `(${allUnits.join('|')})\\\\.(\\\\s[${lowercase.join('')}])`, '$1$2')\n  ])\n}\n"
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "units",
    "memberof": "src/rules/units.js",
    "longname": "src/rules/units.js~units",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/rules/units.js",
    "importStyle": "units",
    "description": "The ruleset for measurement units formatting.\n\nThe following units from the international units system are supported: `m`,\n`m²`, `m³`, `g`, `s`, `l`, `L`, `K`, `W`, `V`, `Hz`, `Ω`, `A`, `mol`\nand `cd`.\n\nAll these units have derivations using the following prefixes: `y`, `z`, `a`,\n`f`, `p`, `n`, `µ`, `m`, `c`, `d`, `da`, `h`, `k`, `M`, `G`, `T`, `P`, `E`,\n`Z` and `Y`.\n\nAdditionally, the following units are supported:\n\n- temperature: `°C`, `°F`, `°Ré`, `°N`, `°Ra`\n- distance: `mi`, `in`, `ft`, `yd`, `nautical mile`\n- speed: `kmph`, `km/h`, `mps`, `m/s`, `mph`, `mi/h`, `knot`,\n  `nautical mile/h`, `ma`\n- surface: `ha`, `a`, `ca`, `mile²`, `in²`, `yd²`, `ft²`, `ro`, `acre`,\n  `nautical mile²`\n- volume: `in³`, `ft³`, `yd³`, `gal`, `bbl`, `pt`, `fluid pt`, `dry pt`\n- weight: `t`, `carat`, `grain`, `oz`, `lb`, `cwt`, `ton`, `st`\n- data: `b`, `B`, and all the derivations using the international system\n  prefixes\n- time: `h`, `min`\n- electric: `dBm`, `dBW`, `var`, `VA`, `F`, `H`, `S`, `C`, `Ah`, `J`, `kWh`,\n  `eV`, `Ω∙m`, `S/m`, `V/m`, `N/C`, `V·m`, `T`, `G`, `Wb`, `dB`, `ppm`\n\nThis ruleset includes rules for:\n\n- Replacing a `2` after a surface unit with `²`\n- Replacing a `3` after a volumic unit with `³`\n- Adding a non-breaking space between a number and the following unit\n- Removing a period placed after the unit when it's not the end of a sentence",
    "see": [
      "https://en.wikipedia.org/wiki/International_System_of_Units",
      "http://physics.nist.gov/cuu/Units/checklist.html"
    ],
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createRuleset",
    "memberof": "src/rules/units.js",
    "longname": "src/rules/units.js~createRuleset",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/rules/units.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/typography-fixer.js",
    "memberof": null,
    "longname": "src/typography-fixer.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import R from 'ramda'\n\nconst {\n  anyPass, append, both, compose, concat, cond, converge, curry, either, filter, flatten, groupBy, head, is, isArrayLike, join, lensProp, map, merge, not, over, pipe, propSatisfies, reduce, replace, sort, tail, transpose, unapply, unnest, where\n} = R\n\n/**\n * Returns an array of rule violations in the passed-in string.\n *\n * Ignores and rules are separated at the beginning of the call, then the ranges\n * to ignore are computed. When the a check results intersect with or is\n * contained in a range it will be simply ignored.\n *\n * If there's no results, the function returns `undefined`.\n *\n * See the {@link rule} and {@link ignore} documentation for details about how\n * rules and ignore rules are created.\n *\n * @param  {Array} [ruleset=[]] the array with all the rules and ignores to use\n *                              when checking the passed-in string\n * @param  {string} [string] the string to check\n * @return {Array|undefined} an array of rule violation results or `undefined`\n *                           when there is no violations.<br>Each result\n *                           object will have the following properties:\n * @property {string} name the name of the broken rule\n * @property {Array} range the range at which the violation can be found\n *                         in the string\n * @example\n * import {check} from 'typography-fixer'\n * import rules from 'typography-fixer/lib/rules/en-UK'\n *\n * const results = check(rules, 'Some string \"to check\".')\n *\n * // The check function support currying\n * const checkString = check(rules)\n *\n * const results = checkSring('Some string \"to check\".')\n */\nexport function check (ruleset = [], string) {\n  const {ignores, rules} = splitRules(ruleset)\n\n  if (rules.length === 0) { return string ? undefined : function () {} }\n\n  const getRanges = compose(unnest, R.ap(map(rangesFunctionFor, ignores)), R.of)\n  const getCheckResults = converge(unapply(flatten), map(checkString, rules))\n\n  const doCheck = (string) => {\n    const anyIntersection = anyPass(map(rangesIntersects, getRanges(string)))\n    const noIntersection = compose(not, propSatisfies(anyIntersection, 'range'))\n    const results = filter(noIntersection, getCheckResults(string))\n\n    return results.length > 0 ? results : undefined\n  }\n\n  return string ? doCheck(string) : doCheck\n}\n\n/**\n * Returns the passed-in string modified by the specified ruleset.\n *\n * Ignores and rules are separated at the beginning of the call, then the ranges\n * to ignore are computed. The string is split using the ranges to have in one\n * array all the parts that can be modified and in another array all the ignored\n * parts. Once all the fixes were applied, the string from the two arrays are\n * joined together into a new string and returned.\n *\n * See the {@link rule} and {@link ignore} documentation for details about how\n * rules and ignore rules are created.\n *\n * @param  {Array} [ruleset=[]] the array with all the rules and ignores to use\n *                              to transform the passed-in string\n * @param  {string} [string] the string to fix\n * @return {string} the fixed string\n * @example\n * import {fix} from 'typography-fixer'\n * import rules from 'typography-fixer/lib/rules/en-UK'\n *\n * const string = fix(rules, 'Some string \"to fix\".')\n *\n * // The fix function support currying\n * const fixString = fix(rules)\n *\n * const results = fixString('Some string \"to fix\".')\n */\nexport function fix (ruleset = [], string) {\n  const {ignores, rules} = splitRules(ruleset)\n\n  if (rules.length === 0) { return string || function () {} }\n\n  const getRanges = compose(\n    sortRanges,\n    compactRanges,\n    unnest,\n    R.ap(map(rangesFunctionFor, ignores)),\n    R.of\n  )\n  const fixer = pipe(...map(fixString, rules))\n\n  const doFix = (string) => {\n    const {legit, ignored} = splitByRanges(string, getRanges(string))\n    const fixContent = map(fixer)\n\n    return alternateJoin(fixContent(legit), ignored)\n  }\n\n  return string ? doFix(string) : doFix\n}\n\n/**\n * Returns a flat array of rules with names prefixed by the passed-in `name`.\n *\n * When called without a name the `group` function will only flatten the given\n * rules array.\n *\n * One use case of calling group without a name is when exporting a ruleset from\n * a file so that nested groups get flatten into the exported array.\n *\n * @param  {string} [name] the name of the rules group\n * @param  {Array} rules the rules to be part of the group\n * @return {Array} an array of new rules prefixed with this group name\n *\n * @example\n * import {group, rule} from 'typography-fixer'\n *\n * export default group([\n *   group('spaces', [\n *     rule('spaceAfterPeriodOrColon', /(\\D)(\\.|:)([^\\s\\)])/, '$1$2 $3'),\n *     …\n *   ])\n * ])\n */\nexport function group (name, rules) {\n  const rulesAsFirstArgument = compose(isArrayLike, head)\n  const nameThenRules = both(\n    compose(isString, head),\n    compose(isArrayLike, tail)\n  )\n\n  const normalizeArguments = cond([\n    when(rulesAsFirstArgument, ([rules]) => [[], rules]),\n    when(nameThenRules, ([name, rules]) => [[name], rules]),\n    when(R.T, () => [[], []])\n  ])\n\n  const [groupName, ruleset] = normalizeArguments([name, rules])\n\n  const prefixer = compose(join('.'), concat(groupName))\n  const prefixName = over(lensProp('name'), prefixer)\n\n  return Object.freeze(map(prefixName, flatten(ruleset)))\n}\n\n/**\n * Creates a new rule object that matches the specified `match` expression.\n *\n * A rule is an object with a `name`, `match` and `replace` properties.\n *\n * A rule can be created with either a string or a regular expression as the\n * `match` paramete\n *\n * - When given a regular expression the flags of the original expression\n *   are preserved except for the `global` which will be forcefully defined\n *   on the `match` created when checking or fixing a string.\n * - When given a string this string will be used a source for the regular\n *   expressions. These expressions will be created with the `multiline` flag\n *   enabled.\n *\n * The `replace` parameter is used when a match is found and will be passed\n * as the second argument of the `String#replace` method. A regular expression\n * based on the one used to search the string will be passed as the first\n * argument. It means that every group will be available to use in the\n * replacement string. A function can also be passed in the `replace`\n * parameter and will then receive the matched string and the various groups as\n * arguments.\n *\n * @param  {string} name the name of the rule\n * @param  {string|RegExp} match the regular expression to match against\n *                               a string\n * @param  {string|function} replace the replacement string or function\n *                                   to use when a match is found\n * @return {Object} the rule object\n * @example\n * import {rule} from 'typography-fixer'\n *\n * // this rule adds a space after `.` and `:` unless the characted is preceded\n * // by a number, as in 12.4 or 04:35, or followed by a space or `)`\n * const ruleObject = rule('spaceAfterPeriodOrColon', /(\\D)(\\.|:)([^\\s\\)])/, '$1$2 $3')\n */\nexport function rule (name, match, replace) {\n  return Object.freeze({name, match, replace})\n}\n\n/**\n * Creates a new ignore rule that excludes the specified `ignore` expression.\n *\n * An ignore rule is an object with a `name`, `ignore` and an optional\n * `invertRanges` properties.\n *\n * An ignore rule can be created with either a string or a regular expression\n * as the `ignore` paramete\n *\n * - When given a regular expression the flags of the original expression\n *   are preserved except for the `global` which will be forcefully defined\n *   on the expression created when checking or fixing a string.\n * - When given a string this string will be used a source for the regular\n *   expressions. These expressions will be created with the `multiline` flag\n *   enabled.\n *\n * An ignore rule can also ignores everything that is not matched by the\n * expression by passing `true` as in the `invertRanges` argument of the\n * `ignore` function.\n *\n * @param  {string} name the name of the rule\n * @param  {string|RegExp} ignore the regular expression to match against\n *                                a string\n * @param  {boolean} [invertRanges=false] if `true` the excluded ranges will\n *                                        cover every part of the string that\n *                                        is not matched by the expression\n * @return {Object} [description]\n * @example\n * import {ignore} from 'typography-fixer'\n *\n * // this rule ignores markdown code blocks defined using three consecutive backticks\n * const ignoreObject = ignore('codeBlock', /(```)(.|\\n)*?\\1/),\n */\nexport function ignore (name, ignore, invertRanges = false) {\n  return Object.freeze({name, ignore, invertRanges})\n}\n\n//  ########  ########  #### ##     ##    ###    ######## ########\n//  ##     ## ##     ##  ##  ##     ##   ## ##      ##    ##\n//  ##     ## ##     ##  ##  ##     ##  ##   ##     ##    ##\n//  ########  ########   ##  ##     ## ##     ##    ##    ######\n//  ##        ##   ##    ##   ##   ##  #########    ##    ##\n//  ##        ##    ##   ##    ## ##   ##     ##    ##    ##\n//  ##        ##     ## ####    ###    ##     ##    ##    ########\n\n/**\n * A predicate that returns true when the passed-in value is a regular\n * expression.\n *\n * @param  {*} value the value to test\n * @return {boolean} whether the value is a regular expression or not\n * @access private\n */\nconst isRegExp = is(RegExp)\n\n/**\n * A predicate that returns true when the passed-in value is a string.\n *\n * @param  {*} value the value to test\n * @return {boolean} whether the value is a string or not\n * @access private\n */\nconst isString = is(String)\n\n/**\n * A predicate that returns true when the passed-in value is a function.\n *\n * @param  {*} value the value to test\n * @return {boolean} whether the value is a function or not\n * @access private\n */\nconst isFunction = is(Function)\n\n/**\n * A predicate that returns true when the passed-in value is either a string\n * or a regular expression.\n *\n * @param  {*} value the value to test\n * @return {boolean} true if the value is either a regular expression\n *                        or a string\n * @access private\n */\nconst isStringOrRegExp = either(isString, isRegExp)\n\n/**\n * A predicate that returns true when the passed-in value is either a string\n * or a function.\n *\n * @param  {*} value the value to test\n * @return {boolean} true if the value is either a function or a string\n * @access private\n */\nconst isStringOrFunction = either(isString, isFunction)\n\n/**\n * A predicate that returns true when the passed-in object is a valid rule.\n *\n * @param  {*} value the object to test\n * @return {boolean} true if the passed-in object is a valid rule\n * @access private\n */\nconst isRule = where({\n  name: isString,\n  match: isStringOrRegExp,\n  replace: isStringOrFunction\n})\n\n/**\n * A predicate that returns true when the passed-in object is a valid\n * ignore rule.\n *\n * @param  {*} value the object to test\n * @return {boolean} true if the passed-in object is a valid ignore rule\n * @access private\n */\nconst isIgnore = where({\n  name: isString,\n  ignore: isStringOrRegExp\n})\n\n/**\n * Wraps the passed-in condition and function into an array to be used\n * in a `cond` argument.\n *\n * @param  {function(value:*):boolean} predicate a function to use as predicate\n * @param  {function(value:*):*} then a function to use when the predicate\n *                                    is fulfilled\n * @return {Array<Function>} an array with the two passed-in functions\n */\nconst when = (predicate, then) => [predicate, then]\n\n/**\n * Returns the base flags array for a regular expression depending on whether\n * the regexp should match globally or not.\n *\n * @param  {boolean} global whether the regexp should match globally or not\n * @return {Array} the base flags array\n * @access private\n */\nconst baseFlags = (global) => global ? ['g'] : []\n\n/**\n * Extract the flag letter corresponding to a given property from the specified\n * regular expression. For instance, if asked the flag for the multiline\n * property and the passed-in expression has `multiline` enabled the function\n * will return `'m'` otherwise it will return an empty string.\n *\n * @param  {string} prop the property flag to extract\n * @param  {RegExp} re the target regular expression\n * @return {string} the flag string\n * @access private\n */\nconst flag = curry((prop, re) => re[prop] ? prop[0] : '')\n\n/**\n * Returns the flags array for the given regular expression but with the\n * global flag defined using the specified parameter.\n *\n * This function is used to create clones of rules and ignores expression\n * but configurated to be used in different context.\n *\n * @param  {boolean} global whether the regexp should match globally or not\n * @param  {RegExp} re the target regular expression\n * @return {Array} an array of regular expression flags\n * @access private\n */\nconst flagsForRegExp = curry((global, re) => {\n  const appendFlags = compose(\n    append(flag('multiline', re)),\n    append(flag('ignoreCase', re))\n  )\n\n  return appendFlags(baseFlags(global))\n})\n\n/**\n * Returns a cloned regular expression from the passed-in rule's property\n * specified in the arguments.\n *\n * @param  {boolean} global whether the regexp should match globally or not\n * @param  {string} prop the rule property to clone\n * @param  {Object} rule the source rule object\n * @return {RegExp} the cloned regular expression\n * @access private\n */\nconst ruleRegExp = curry((global, prop, rule) => {\n  const getSource = (e) => isRegExp(e) ? e.source : e\n  const getFlags = compose(\n    join(''),\n    (e) =>\n      isRegExp(e) ? flagsForRegExp(global, e) : concat(baseFlags(global), 'm')\n  )\n\n  return new RegExp(getSource(rule[prop]), getFlags(rule[prop]))\n})\n\n/**\n * A parameterized function that returns a cloned regular expression for\n * the passed-in ignore rule.\n *\n * @param  {Object} ignore the source ignore rule\n * @return {RegExp} the cloned regular expression\n * @access private\n */\nconst ignoreRuleRegExp = ruleRegExp(true, 'ignore')\n\n/**\n * A parameterized function that returns a cloned regular expression for\n * the passed-in rule to use when searching matches globally in a string.\n *\n * @param  {Object} ignore the source ignore rule\n * @return {RegExp} the cloned regular expression\n * @access private\n */\nconst searchRuleRegExp = ruleRegExp(true, 'match')\n\n/**\n * A parameterized function that returns a clone regular expression for\n * the passed-in ignore rule when performing a simple match against a string.\n *\n * @param  {Object} ignore the source ignore rule\n * @return {RegExp} the cloned regular expression\n * @access private\n */\nconst matchRuleRegExp = ruleRegExp(false, 'match')\n\n/**\n * Returns the check results of the given rule against the passed-in string.\n * If no matches are found the function returns an empty array.\n *\n * @param  {Object} rule the rule to check the string\n * @param  {string} string the string to check\n * @return {Array<Object>} an array of resuls\n * @access private\n */\nfunction checkString (rule, string) {\n  const searchRegExp = searchRuleRegExp(rule)\n  const matchRegExp = matchRuleRegExp(rule)\n\n  const doCheck = (string) => {\n    const matches = []\n    searchRegExp.lastIndex = 0\n\n    let match\n    do {\n      match = searchRegExp.exec(string)\n      if (match && match[0].replace(matchRegExp, rule.replace) !== match[0]) {\n        matches.push({\n          rule: rule.name,\n          range: [match.index, searchRegExp.lastIndex]\n        })\n      }\n    } while (match)\n\n    return matches\n  }\n\n  return string ? doCheck(string) : doCheck\n}\n\n/**\n * Returns the passed-in string fixed according to the specified rule.\n *\n * @param  {Object} rule the rule to apply to the string\n * @param  {string} string the string to fix\n * @return {string} the fixed string\n * @access private\n */\nfunction fixString (rule, string) {\n  const searchRegExp = searchRuleRegExp(rule)\n\n  const doFix = (string) => {\n    searchRegExp.length = 0\n\n    return replace(searchRegExp, rule.replace, string)\n  }\n\n  return string ? doFix(string) : doFix\n}\n\n/**\n * Returns a function to compute the ranges to ignore according to the\n * passed-in rule.\n *\n * @param  {Object} rule the rule for which computing the range\n * @return {function(string):Array} a function that returns the range for\n *                                  for a given string\n * @access private\n */\nfunction rangesFunctionFor (rule) {\n  return rule.invertRanges ? exclusiveRangesFor(rule) : inclusiveRangesFor(rule)\n}\n\n/**\n * Returns the ignored ranges in the string for the passed-in rule. All the\n * sections of the string that is matched by the rule regular expression will\n * be ignored.\n *\n * @param  {Object} rule the ignore rule for which getting ranges\n * @param  {string} the string into which find the ranges\n * @return {Array<Array>} an array with the ignored ranges\n * @access private\n */\nfunction inclusiveRangesFor (rule, string) {\n  const re = ignoreRuleRegExp(rule)\n\n  const getRanges = (string) => {\n    re.lastIndex = 0\n    const ranges = []\n    let match\n\n    do {\n      match = re.exec(string)\n      if (match) { ranges.push([match.index, re.lastIndex]) }\n    } while (match)\n\n    return ranges\n  }\n\n  return string ? getRanges(string) : getRanges\n}\n\n/**\n * Returns the ignored ranges in the string for the passed-in rule. All the\n * sections of the string that is not matched by the rule regular expression\n * will be ignored.\n *\n * @param  {Object} rule the ignore rule for which getting ranges\n * @param  {string} the string into which find the ranges\n * @return {Array<Array>} an array with the ignored ranges\n * @access private\n */\nfunction exclusiveRangesFor (rule, string) {\n  const re = ignoreRuleRegExp(rule)\n\n  const getRanges = (string) => {\n    re.lastIndex = 0\n    const ranges = []\n    let start = 0\n    let match\n\n    do {\n      match = re.exec(string)\n      if (match) {\n        ranges.push([start, match.index - 1])\n        start = re.lastIndex\n      }\n    } while (match)\n\n    ranges.push([start, string.length])\n\n    return ranges\n  }\n\n  return string ? getRanges(string) : getRanges\n}\n\n/**\n * A filter function that only keep objects in the list that are either valid\n * rules or ignore rules.\n *\n * @param  {Array<Object>} ruleset the list of objects to filter\n * @return {Array<Object>} the filtered list\n * @access private\n */\nconst rulesFilter = filter(either(isRule, isIgnore))\n\n/**\n * A grouping function that separates rules and ignore rules into two\n * separate lists.\n *\n * @param  {Array<Object>} ruleset the list of rules to group\n * @return {Object} an object with the rules and ignores from the original array\n * @property {Array<Object>} rules the array of rules\n * @property {Array<Object>} ignores the array of ignores\n * @access private\n */\nconst rulesGrouper = groupBy(rule => rule.ignore ? 'ignores' : 'rules')\n\n/**\n * Takes an object and returns a new object where the `rules` and `ignores`\n * properties have been defined with a new array if they were not present.\n *\n * @param  {Object} object the initial object\n * @return {Object} a new object that is guarantee to have `rules` and\n *                  `ignores` properties\n * @access private\n */\nconst setRulesDefault = merge({ignores: [], rules: []})\n\n/**\n * Returns an object with two lists containing the rules and ignores from\n * the passed-in array. Every objects that doesn't match the criteria will\n * be discarded.\n *\n * @param  {Array<Object>} ruleset the array of rules to split\n * @return {Object} an object with the rules and ignores from the original array\n * @property {Array<Object>} rules the array of rules\n * @property {Array<Object>} ignores the array of ignores\n * @access private\n */\nconst splitRules = compose(setRulesDefault, rulesGrouper, rulesFilter)\n\n/**\n * Returns whether the two passed-in ranges intersect or not\n *\n * @param  {Array} rangeA the first range to test\n * @param  {Array} rangeB the second range to test\n * @return {boolean} whether the two ranges intersect\n * @access private\n */\nconst rangesIntersects = curry((rangeA, rangeB) => {\n  const [startA, endA] = rangeA\n  const [startB, endB] = rangeB\n\n  return (startB >= startA && startB <= endA) ||\n         (endB >= startA && endB <= endA) ||\n         (startA >= startB && startA <= endB) ||\n         (endA >= startB && endA <= endB)\n})\n\n/**\n * Takes a string and a list of ranges and returns an object with two lists\n * containing in `ignored` the string parts that are contained in the passed-in\n * ranges and in `legit` the parts that are not contained by the ranges.\n *\n * @param  {string} string the string to split\n * @param  {Array<Array>} ranges the ranges to use to split the string\n * @return {Object} an object with the string split by ranges\n * @property {Array<string>} legit the parts of the string not contained\n *                                 in the passed-in ranges\n * @property {Array<string>} ignored the parts of the string contained\n *                                   in the passed-in ranges\n * @access private\n */\nfunction splitByRanges (string, ranges) {\n  const results = {legit: [], ignored: []}\n\n  let start = 0\n  const reducer = (memo, range) => {\n    memo.legit.push(string.slice(start, range[0]))\n    memo.ignored.push(string.slice(range[0], range[1]))\n    start = range[1]\n    return results\n  }\n  reduce(reducer, results, ranges)\n\n  results.legit.push(string.slice(start, string.length))\n  results.ignored.push('')\n\n  return results\n}\n\n/**\n * A reducer function that takes a string `memo` and a tuple of two strings `a`\n * and `b` and which returns a string that is the result of `memo + a + b`.\n *\n * @param  {string} memo the reduce memo\n * @param  {array} tuple the current pair of string from the two lists\n * @return {string} the new memo\n * @access private\n */\nconst joinReducer = (memo, [a, b]) => memo + a + b\n\n/**\n * Takes two lists and joins them such as the final string is the result\n * of `a[0] + b[0] + a[1] + b[1] + a[n] + b[n]`.\n *\n * @param  {Array<string>} a the first list to join\n * @param  {Array<string>} b the second list to join\n * @return {string} the string resulting of joining the two lists\n * @access private\n */\nconst alternateJoin = (a, b) => reduce(joinReducer, '', transpose([a, b]))\n\n/**\n * Takes a list of ranges and returns a new list where all the intersecting\n * ranges have been merged.\n *\n * @param  {Array<Array>} ranges [description]\n * @return {Array<Array>} [description]\n * @access private\n */\nfunction compactRanges (ranges) {\n  if (ranges.length === 0) { return [] }\n\n  return reduce(rangesReducer, [], ranges)\n}\n\n/**\n * The reducer function used to merge intersecting ranges.\n *\n * @param  {Array<Array>} memo the initial memo array\n * @param  {Array} rangeA the current range to process\n * @return {Array<Array>} the new memo array\n * @access private\n */\nfunction rangesReducer (memo, rangeA) {\n  const filterer = (rangeB) => {\n    if (rangesIntersects(rangeA, rangeB)) {\n      rangeA[0] = Math.min(rangeA[0], rangeB[0])\n      rangeA[1] = Math.max(rangeA[1], rangeB[1])\n      return false\n    } else {\n      return true\n    }\n  }\n\n  return memo.length === 0\n    ? append(rangeA, memo)\n    : append(rangeA, filter(filterer, memo))\n}\n\n/**\n * Takes a list of ranges and sort them by their start position.\n *\n * @param  {Array<Array>} ranges the list of ranges to sort\n * @return {Array<Array>} the sorted ranges list\n * @access private\n */\nconst sortRanges = sort((a, b) => a[0] - b[0])\n"
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "anyPass",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~anyPass",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "check",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~check",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": "{check}",
    "description": "Returns an array of rule violations in the passed-in string.\n\nIgnores and rules are separated at the beginning of the call, then the ranges\nto ignore are computed. When the a check results intersect with or is\ncontained in a range it will be simply ignored.\n\nIf there's no results, the function returns `undefined`.\n\nSee the {@link rule} and {@link ignore} documentation for details about how\nrules and ignore rules are created.",
    "examples": [
      "import {check} from 'typography-fixer'\nimport rules from 'typography-fixer/lib/rules/en-UK'\n\nconst results = check(rules, 'Some string \"to check\".')\n\n// The check function support currying\nconst checkString = check(rules)\n\nconst results = checkSring('Some string \"to check\".')"
    ],
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "ruleset",
        "description": "the array with all the rules and ignores to use\n                             when checking the passed-in string"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "string",
        "description": "the string to check"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the broken rule"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "range",
        "description": "the range at which the violation can be found\n                        in the string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array",
        "undefined"
      ],
      "spread": false,
      "description": "an array of rule violation results or `undefined`\n                          when there is no violations.<br>Each result\n                          object will have the following properties:"
    },
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "fix",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~fix",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": "{fix}",
    "description": "Returns the passed-in string modified by the specified ruleset.\n\nIgnores and rules are separated at the beginning of the call, then the ranges\nto ignore are computed. The string is split using the ranges to have in one\narray all the parts that can be modified and in another array all the ignored\nparts. Once all the fixes were applied, the string from the two arrays are\njoined together into a new string and returned.\n\nSee the {@link rule} and {@link ignore} documentation for details about how\nrules and ignore rules are created.",
    "examples": [
      "import {fix} from 'typography-fixer'\nimport rules from 'typography-fixer/lib/rules/en-UK'\n\nconst string = fix(rules, 'Some string \"to fix\".')\n\n// The fix function support currying\nconst fixString = fix(rules)\n\nconst results = fixString('Some string \"to fix\".')"
    ],
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "ruleset",
        "description": "the array with all the rules and ignores to use\n                             to transform the passed-in string"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "string",
        "description": "the string to fix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the fixed string"
    },
    "generator": false
  },
  {
    "__docId__": 56,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "group",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~group",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": "{group}",
    "description": "Returns a flat array of rules with names prefixed by the passed-in `name`.\n\nWhen called without a name the `group` function will only flatten the given\nrules array.\n\nOne use case of calling group without a name is when exporting a ruleset from\na file so that nested groups get flatten into the exported array.",
    "examples": [
      "import {group, rule} from 'typography-fixer'\n\nexport default group([\n  group('spaces', [\n    rule('spaceAfterPeriodOrColon', /(\\D)(\\.|:)([^\\s\\)])/, '$1$2 $3'),\n    …\n  ])\n])"
    ],
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "the name of the rules group"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "rules",
        "description": "the rules to be part of the group"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "an array of new rules prefixed with this group name"
    },
    "generator": false
  },
  {
    "__docId__": 57,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "rule",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~rule",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": "{rule}",
    "description": "Creates a new rule object that matches the specified `match` expression.\n\nA rule is an object with a `name`, `match` and `replace` properties.\n\nA rule can be created with either a string or a regular expression as the\n`match` paramete\n\n- When given a regular expression the flags of the original expression\n  are preserved except for the `global` which will be forcefully defined\n  on the `match` created when checking or fixing a string.\n- When given a string this string will be used a source for the regular\n  expressions. These expressions will be created with the `multiline` flag\n  enabled.\n\nThe `replace` parameter is used when a match is found and will be passed\nas the second argument of the `String#replace` method. A regular expression\nbased on the one used to search the string will be passed as the first\nargument. It means that every group will be available to use in the\nreplacement string. A function can also be passed in the `replace`\nparameter and will then receive the matched string and the various groups as\narguments.",
    "examples": [
      "import {rule} from 'typography-fixer'\n\n// this rule adds a space after `.` and `:` unless the characted is preceded\n// by a number, as in 12.4 or 04:35, or followed by a space or `)`\nconst ruleObject = rule('spaceAfterPeriodOrColon', /(\\D)(\\.|:)([^\\s\\)])/, '$1$2 $3')"
    ],
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the rule"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "match",
        "description": "the regular expression to match against\n                              a string"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "replace",
        "description": "the replacement string or function\n                                  to use when a match is found"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the rule object"
    },
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ignore",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~ignore",
    "access": null,
    "export": true,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": "{ignore}",
    "description": "Creates a new ignore rule that excludes the specified `ignore` expression.\n\nAn ignore rule is an object with a `name`, `ignore` and an optional\n`invertRanges` properties.\n\nAn ignore rule can be created with either a string or a regular expression\nas the `ignore` paramete\n\n- When given a regular expression the flags of the original expression\n  are preserved except for the `global` which will be forcefully defined\n  on the expression created when checking or fixing a string.\n- When given a string this string will be used a source for the regular\n  expressions. These expressions will be created with the `multiline` flag\n  enabled.\n\nAn ignore rule can also ignores everything that is not matched by the\nexpression by passing `true` as in the `invertRanges` argument of the\n`ignore` function.",
    "examples": [
      "import {ignore} from 'typography-fixer'\n\n// this rule ignores markdown code blocks defined using three consecutive backticks\nconst ignoreObject = ignore('codeBlock', /(```)(.|\\n)*?\\1/),"
    ],
    "lineNumber": 226,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the rule"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "ignore",
        "description": "the regular expression to match against\n                               a string"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "invertRanges",
        "description": "if `true` the excluded ranges will\n                                       cover every part of the string that\n                                       is not matched by the expression"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "[description]"
    },
    "generator": false
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isRegExp",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~isRegExp",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A predicate that returns true when the passed-in value is a regular\nexpression.",
    "lineNumber": 246,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the value is a regular expression or not"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isString",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~isString",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A predicate that returns true when the passed-in value is a string.",
    "lineNumber": 255,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the value is a string or not"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isFunction",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~isFunction",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A predicate that returns true when the passed-in value is a function.",
    "lineNumber": 264,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the value is a function or not"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isStringOrRegExp",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~isStringOrRegExp",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A predicate that returns true when the passed-in value is either a string\nor a regular expression.",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the value is either a regular expression\n                       or a string"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isStringOrFunction",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~isStringOrFunction",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A predicate that returns true when the passed-in value is either a string\nor a function.",
    "lineNumber": 285,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the value is either a function or a string"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isRule",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~isRule",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A predicate that returns true when the passed-in object is a valid rule.",
    "lineNumber": 294,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the object to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the passed-in object is a valid rule"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isIgnore",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~isIgnore",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A predicate that returns true when the passed-in object is a valid\nignore rule.",
    "lineNumber": 308,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the object to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the passed-in object is a valid ignore rule"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "when",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~when",
    "access": null,
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Wraps the passed-in condition and function into an array to be used\nin a `cond` argument.",
    "lineNumber": 322,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(value:*):boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "a function to use as predicate"
      },
      {
        "nullable": null,
        "types": [
          "function(value:*):*"
        ],
        "spread": false,
        "optional": false,
        "name": "then",
        "description": "a function to use when the predicate\n                                   is fulfilled"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Function>"
      ],
      "spread": false,
      "description": "an array with the two passed-in functions"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "baseFlags",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~baseFlags",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns the base flags array for a regular expression depending on whether\nthe regexp should match globally or not.",
    "lineNumber": 332,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "global",
        "description": "whether the regexp should match globally or not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "the base flags array"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "flag",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~flag",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Extract the flag letter corresponding to a given property from the specified\nregular expression. For instance, if asked the flag for the multiline\nproperty and the passed-in expression has `multiline` enabled the function\nwill return `'m'` otherwise it will return an empty string.",
    "lineNumber": 345,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prop",
        "description": "the property flag to extract"
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "re",
        "description": "the target regular expression"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the flag string"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "flagsForRegExp",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~flagsForRegExp",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns the flags array for the given regular expression but with the\nglobal flag defined using the specified parameter.\n\nThis function is used to create clones of rules and ignores expression\nbut configurated to be used in different context.",
    "lineNumber": 359,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "global",
        "description": "whether the regexp should match globally or not"
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "re",
        "description": "the target regular expression"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "an array of regular expression flags"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ruleRegExp",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~ruleRegExp",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns a cloned regular expression from the passed-in rule's property\nspecified in the arguments.",
    "lineNumber": 378,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "global",
        "description": "whether the regexp should match globally or not"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prop",
        "description": "the rule property to clone"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "the source rule object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": "the cloned regular expression"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ignoreRuleRegExp",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~ignoreRuleRegExp",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A parameterized function that returns a cloned regular expression for\nthe passed-in ignore rule.",
    "lineNumber": 397,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ignore",
        "description": "the source ignore rule"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": "the cloned regular expression"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "searchRuleRegExp",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~searchRuleRegExp",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A parameterized function that returns a cloned regular expression for\nthe passed-in rule to use when searching matches globally in a string.",
    "lineNumber": 407,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ignore",
        "description": "the source ignore rule"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": "the cloned regular expression"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "matchRuleRegExp",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~matchRuleRegExp",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A parameterized function that returns a clone regular expression for\nthe passed-in ignore rule when performing a simple match against a string.",
    "lineNumber": 417,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ignore",
        "description": "the source ignore rule"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": "the cloned regular expression"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "checkString",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~checkString",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns the check results of the given rule against the passed-in string.\nIf no matches are found the function returns an empty array.",
    "lineNumber": 428,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "the rule to check the string"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "the string to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": "an array of resuls"
    },
    "generator": false
  },
  {
    "__docId__": 75,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "fixString",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~fixString",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns the passed-in string fixed according to the specified rule.",
    "lineNumber": 461,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "the rule to apply to the string"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "the string to fix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the fixed string"
    },
    "generator": false
  },
  {
    "__docId__": 76,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "rangesFunctionFor",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~rangesFunctionFor",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns a function to compute the ranges to ignore according to the\npassed-in rule.",
    "lineNumber": 482,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "the rule for which computing the range"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(string):Array"
      ],
      "spread": false,
      "description": "a function that returns the range for\n                                 for a given string"
    },
    "generator": false
  },
  {
    "__docId__": 77,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "inclusiveRangesFor",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~inclusiveRangesFor",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns the ignored ranges in the string for the passed-in rule. All the\nsections of the string that is matched by the rule regular expression will\nbe ignored.",
    "lineNumber": 496,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "the ignore rule for which getting ranges"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "the",
        "description": "string into which find the ranges"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array>"
      ],
      "spread": false,
      "description": "an array with the ignored ranges"
    },
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exclusiveRangesFor",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~exclusiveRangesFor",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns the ignored ranges in the string for the passed-in rule. All the\nsections of the string that is not matched by the rule regular expression\nwill be ignored.",
    "lineNumber": 525,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "the ignore rule for which getting ranges"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "the",
        "description": "string into which find the ranges"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array>"
      ],
      "spread": false,
      "description": "an array with the ignored ranges"
    },
    "generator": false
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "rulesFilter",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~rulesFilter",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A filter function that only keep objects in the list that are either valid\nrules or ignore rules.",
    "lineNumber": 558,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "ruleset",
        "description": "the list of objects to filter"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": "the filtered list"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "rulesGrouper",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~rulesGrouper",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A grouping function that separates rules and ignore rules into two\nseparate lists.",
    "lineNumber": 570,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "ruleset",
        "description": "the list of rules to group"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "rules",
        "description": "the array of rules"
      },
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "ignores",
        "description": "the array of ignores"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "an object with the rules and ignores from the original array"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "setRulesDefault",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~setRulesDefault",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Takes an object and returns a new object where the `rules` and `ignores`\nproperties have been defined with a new array if they were not present.",
    "lineNumber": 581,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "the initial object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "a new object that is guarantee to have `rules` and\n                 `ignores` properties"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "splitRules",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~splitRules",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns an object with two lists containing the rules and ignores from\nthe passed-in array. Every objects that doesn't match the criteria will\nbe discarded.",
    "lineNumber": 594,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "ruleset",
        "description": "the array of rules to split"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "rules",
        "description": "the array of rules"
      },
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "ignores",
        "description": "the array of ignores"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "an object with the rules and ignores from the original array"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "rangesIntersects",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~rangesIntersects",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Returns whether the two passed-in ranges intersect or not",
    "lineNumber": 604,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "rangeA",
        "description": "the first range to test"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "rangeB",
        "description": "the second range to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the two ranges intersect"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "splitByRanges",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~splitByRanges",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Takes a string and a list of ranges and returns an object with two lists\ncontaining in `ignored` the string parts that are contained in the passed-in\nranges and in `legit` the parts that are not contained by the ranges.",
    "lineNumber": 628,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "the string to split"
      },
      {
        "nullable": null,
        "types": [
          "Array<Array>"
        ],
        "spread": false,
        "optional": false,
        "name": "ranges",
        "description": "the ranges to use to split the string"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "legit",
        "description": "the parts of the string not contained\n                                in the passed-in ranges"
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "ignored",
        "description": "the parts of the string contained\n                                  in the passed-in ranges"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "an object with the string split by ranges"
    },
    "generator": false
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "joinReducer",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~joinReducer",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "A reducer function that takes a string `memo` and a tuple of two strings `a`\nand `b` and which returns a string that is the result of `memo + a + b`.",
    "lineNumber": 655,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "memo",
        "description": "the reduce memo"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "tuple",
        "description": "the current pair of string from the two lists"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the new memo"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "alternateJoin",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~alternateJoin",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Takes two lists and joins them such as the final string is the result\nof `a[0] + b[0] + a[1] + b[1] + a[n] + b[n]`.",
    "lineNumber": 666,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "the first list to join"
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "the second list to join"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the string resulting of joining the two lists"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "compactRanges",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~compactRanges",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Takes a list of ranges and returns a new list where all the intersecting\nranges have been merged.",
    "lineNumber": 676,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Array>"
        ],
        "spread": false,
        "optional": false,
        "name": "ranges",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array>"
      ],
      "spread": false,
      "description": "[description]"
    },
    "generator": false
  },
  {
    "__docId__": 88,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "rangesReducer",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~rangesReducer",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "The reducer function used to merge intersecting ranges.",
    "lineNumber": 690,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Array>"
        ],
        "spread": false,
        "optional": false,
        "name": "memo",
        "description": "the initial memo array"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "rangeA",
        "description": "the current range to process"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array>"
      ],
      "spread": false,
      "description": "the new memo array"
    },
    "generator": false
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "sortRanges",
    "memberof": "src/typography-fixer.js",
    "longname": "src/typography-fixer.js~sortRanges",
    "access": "private",
    "export": false,
    "importPath": "typography-fixer/src/typography-fixer.js",
    "importStyle": null,
    "description": "Takes a list of ranges and sort them by their start position.",
    "lineNumber": 713,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Array>"
        ],
        "spread": false,
        "optional": false,
        "name": "ranges",
        "description": "the list of ranges to sort"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array>"
      ],
      "spread": false,
      "description": "the sorted ranges list"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/uppercase.js",
    "memberof": null,
    "longname": "src/uppercase.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import R from 'ramda'\n\nexport default R.map(String.fromCharCode, [\n  0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A, 0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A, 0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 0x00D0, 0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x00DD, 0x00DE, 0x0100, 0x0102, 0x0104, 0x0106, 0x0108, 0x010A, 0x010C, 0x010E, 0x0110, 0x0112, 0x0114, 0x0116, 0x0118, 0x011A, 0x011C, 0x011E, 0x0120, 0x0122, 0x0124, 0x0126, 0x0128, 0x012A, 0x012C, 0x012E, 0x0130, 0x0132, 0x0134, 0x0136, 0x0139, 0x013B, 0x013D, 0x013F, 0x0141, 0x0143, 0x0145, 0x0147, 0x014A, 0x014C, 0x014E, 0x0150, 0x0152, 0x0154, 0x0156, 0x0158, 0x015A, 0x015C, 0x015E, 0x0160, 0x0162, 0x0164, 0x0166, 0x0168, 0x016A, 0x016C, 0x016E, 0x0170, 0x0172, 0x0174, 0x0176, 0x0178, 0x0179, 0x017B, 0x017D, 0x0181, 0x0182, 0x0184, 0x0186, 0x0187, 0x0189, 0x018A, 0x018B, 0x018E, 0x018F, 0x0190, 0x0191, 0x0193, 0x0194, 0x0196, 0x0197, 0x0198, 0x019C, 0x019D, 0x019F, 0x01A0, 0x01A2, 0x01A4, 0x01A6, 0x01A7, 0x01A9, 0x01AC, 0x01AE, 0x01AF, 0x01B1, 0x01B2, 0x01B3, 0x01B5, 0x01B7, 0x01B8, 0x01BC, 0x01C4, 0x01C7, 0x01CA, 0x01CD, 0x01CF, 0x01D1, 0x01D3, 0x01D5, 0x01D7, 0x01D9, 0x01DB, 0x01DE, 0x01E0, 0x01E2, 0x01E4, 0x01E6, 0x01E8, 0x01EA, 0x01EC, 0x01EE, 0x01F1, 0x01F4, 0x01F6, 0x01F7, 0x01F8, 0x01FA, 0x01FC, 0x01FE, 0x0200, 0x0202, 0x0204, 0x0206, 0x0208, 0x020A, 0x020C, 0x020E, 0x0210, 0x0212, 0x0214, 0x0216, 0x0218, 0x021A, 0x021C, 0x021E, 0x0220, 0x0222, 0x0224, 0x0226, 0x0228, 0x022A, 0x022C, 0x022E, 0x0230, 0x0232, 0x023A, 0x023B, 0x023D, 0x023E, 0x0241, 0x0243, 0x0244, 0x0245, 0x0246, 0x0248, 0x024A, 0x024C, 0x024E, 0x0370, 0x0372, 0x0376, 0x037F, 0x0386, 0x0388, 0x0389, 0x038A, 0x038C, 0x038E, 0x038F, 0x0391, 0x0392, 0x0393, 0x0394, 0x0395, 0x0396, 0x0397, 0x0398, 0x0399, 0x039A, 0x039B, 0x039C, 0x039D, 0x039E, 0x039F, 0x03A0, 0x03A1, 0x03A3, 0x03A4, 0x03A5, 0x03A6, 0x03A7, 0x03A8, 0x03A9, 0x03AA, 0x03AB, 0x03CF, 0x03D2, 0x03D3, 0x03D4, 0x03D8, 0x03DA, 0x03DC, 0x03DE, 0x03E0, 0x03E2, 0x03E4, 0x03E6, 0x03E8, 0x03EA, 0x03EC, 0x03EE, 0x03F4, 0x03F7, 0x03F9, 0x03FA, 0x03FD, 0x03FE, 0x03FF, 0x0400, 0x0401, 0x0402, 0x0403, 0x0404, 0x0405, 0x0406, 0x0407, 0x0408, 0x0409, 0x040A, 0x040B, 0x040C, 0x040D, 0x040E, 0x040F, 0x0410, 0x0411, 0x0412, 0x0413, 0x0414, 0x0415, 0x0416, 0x0417, 0x0418, 0x0419, 0x041A, 0x041B, 0x041C, 0x041D, 0x041E, 0x041F, 0x0420, 0x0421, 0x0422, 0x0423, 0x0424, 0x0425, 0x0426, 0x0427, 0x0428, 0x0429, 0x042A, 0x042B, 0x042C, 0x042D, 0x042E, 0x042F, 0x0460, 0x0462, 0x0464, 0x0466, 0x0468, 0x046A, 0x046C, 0x046E, 0x0470, 0x0472, 0x0474, 0x0476, 0x0478, 0x047A, 0x047C, 0x047E, 0x0480, 0x048A, 0x048C, 0x048E, 0x0490, 0x0492, 0x0494, 0x0496, 0x0498, 0x049A, 0x049C, 0x049E, 0x04A0, 0x04A2, 0x04A4, 0x04A6, 0x04A8, 0x04AA, 0x04AC, 0x04AE, 0x04B0, 0x04B2, 0x04B4, 0x04B6, 0x04B8, 0x04BA, 0x04BC, 0x04BE, 0x04C0, 0x04C1, 0x04C3, 0x04C5, 0x04C7, 0x04C9, 0x04CB, 0x04CD, 0x04D0, 0x04D2, 0x04D4, 0x04D6, 0x04D8, 0x04DA, 0x04DC, 0x04DE, 0x04E0, 0x04E2, 0x04E4, 0x04E6, 0x04E8, 0x04EA, 0x04EC, 0x04EE, 0x04F0, 0x04F2, 0x04F4, 0x04F6, 0x04F8, 0x04FA, 0x04FC, 0x04FE, 0x0500, 0x0502, 0x0504, 0x0506, 0x0508, 0x050A, 0x050C, 0x050E, 0x0510, 0x0512, 0x0514, 0x0516, 0x0518, 0x051A, 0x051C, 0x051E, 0x0520, 0x0522, 0x0524, 0x0526, 0x0528, 0x052A, 0x052C, 0x052E, 0x0531, 0x0532, 0x0533, 0x0534, 0x0535, 0x0536, 0x0537, 0x0538, 0x0539, 0x053A, 0x053B, 0x053C, 0x053D, 0x053E, 0x053F, 0x0540, 0x0541, 0x0542, 0x0543, 0x0544, 0x0545, 0x0546, 0x0547, 0x0548, 0x0549, 0x054A, 0x054B, 0x054C, 0x054D, 0x054E, 0x054F, 0x0550, 0x0551, 0x0552, 0x0553, 0x0554, 0x0555, 0x0556, 0x10A0, 0x10A1, 0x10A2, 0x10A3, 0x10A4, 0x10A5, 0x10A6, 0x10A7, 0x10A8, 0x10A9, 0x10AA, 0x10AB, 0x10AC, 0x10AD, 0x10AE, 0x10AF, 0x10B0, 0x10B1, 0x10B2, 0x10B3, 0x10B4, 0x10B5, 0x10B6, 0x10B7, 0x10B8, 0x10B9, 0x10BA, 0x10BB, 0x10BC, 0x10BD, 0x10BE, 0x10BF, 0x10C0, 0x10C1, 0x10C2, 0x10C3, 0x10C4, 0x10C5, 0x10C7, 0x10CD, 0x13A0, 0x13A1, 0x13A2, 0x13A3, 0x13A4, 0x13A5, 0x13A6, 0x13A7, 0x13A8, 0x13A9, 0x13AA, 0x13AB, 0x13AC, 0x13AD, 0x13AE, 0x13AF, 0x13B0, 0x13B1, 0x13B2, 0x13B3, 0x13B4, 0x13B5, 0x13B6, 0x13B7, 0x13B8, 0x13B9, 0x13BA, 0x13BB, 0x13BC, 0x13BD, 0x13BE, 0x13BF, 0x13C0, 0x13C1, 0x13C2, 0x13C3, 0x13C4, 0x13C5, 0x13C6, 0x13C7, 0x13C8, 0x13C9, 0x13CA, 0x13CB, 0x13CC, 0x13CD, 0x13CE, 0x13CF, 0x13D0, 0x13D1, 0x13D2, 0x13D3, 0x13D4, 0x13D5, 0x13D6, 0x13D7, 0x13D8, 0x13D9, 0x13DA, 0x13DB, 0x13DC, 0x13DD, 0x13DE, 0x13DF, 0x13E0, 0x13E1, 0x13E2, 0x13E3, 0x13E4, 0x13E5, 0x13E6, 0x13E7, 0x13E8, 0x13E9, 0x13EA, 0x13EB, 0x13EC, 0x13ED, 0x13EE, 0x13EF, 0x13F0, 0x13F1, 0x13F2, 0x13F3, 0x13F4, 0x13F5, 0x1E00, 0x1E02, 0x1E04, 0x1E06, 0x1E08, 0x1E0A, 0x1E0C, 0x1E0E, 0x1E10, 0x1E12, 0x1E14, 0x1E16, 0x1E18, 0x1E1A, 0x1E1C, 0x1E1E, 0x1E20, 0x1E22, 0x1E24, 0x1E26, 0x1E28, 0x1E2A, 0x1E2C, 0x1E2E, 0x1E30, 0x1E32, 0x1E34, 0x1E36, 0x1E38, 0x1E3A, 0x1E3C, 0x1E3E, 0x1E40, 0x1E42, 0x1E44, 0x1E46, 0x1E48, 0x1E4A, 0x1E4C, 0x1E4E, 0x1E50, 0x1E52, 0x1E54, 0x1E56, 0x1E58, 0x1E5A, 0x1E5C, 0x1E5E, 0x1E60, 0x1E62, 0x1E64, 0x1E66, 0x1E68, 0x1E6A, 0x1E6C, 0x1E6E, 0x1E70, 0x1E72, 0x1E74, 0x1E76, 0x1E78, 0x1E7A, 0x1E7C, 0x1E7E, 0x1E80, 0x1E82, 0x1E84, 0x1E86, 0x1E88, 0x1E8A, 0x1E8C, 0x1E8E, 0x1E90, 0x1E92, 0x1E94, 0x1E9E, 0x1EA0, 0x1EA2, 0x1EA4, 0x1EA6, 0x1EA8, 0x1EAA, 0x1EAC, 0x1EAE, 0x1EB0, 0x1EB2, 0x1EB4, 0x1EB6, 0x1EB8, 0x1EBA, 0x1EBC, 0x1EBE, 0x1EC0, 0x1EC2, 0x1EC4, 0x1EC6, 0x1EC8, 0x1ECA, 0x1ECC, 0x1ECE, 0x1ED0, 0x1ED2, 0x1ED4, 0x1ED6, 0x1ED8, 0x1EDA, 0x1EDC, 0x1EDE, 0x1EE0, 0x1EE2, 0x1EE4, 0x1EE6, 0x1EE8, 0x1EEA, 0x1EEC, 0x1EEE, 0x1EF0, 0x1EF2, 0x1EF4, 0x1EF6, 0x1EF8, 0x1EFA, 0x1EFC, 0x1EFE, 0x1F08, 0x1F09, 0x1F0A, 0x1F0B, 0x1F0C, 0x1F0D, 0x1F0E, 0x1F0F, 0x1F18, 0x1F19, 0x1F1A, 0x1F1B, 0x1F1C, 0x1F1D, 0x1F28, 0x1F29, 0x1F2A, 0x1F2B, 0x1F2C, 0x1F2D, 0x1F2E, 0x1F2F, 0x1F38, 0x1F39, 0x1F3A, 0x1F3B, 0x1F3C, 0x1F3D, 0x1F3E, 0x1F3F, 0x1F48, 0x1F49, 0x1F4A, 0x1F4B, 0x1F4C, 0x1F4D, 0x1F59, 0x1F5B, 0x1F5D, 0x1F5F, 0x1F68, 0x1F69, 0x1F6A, 0x1F6B, 0x1F6C, 0x1F6D, 0x1F6E, 0x1F6F, 0x1FB8, 0x1FB9, 0x1FBA, 0x1FBB, 0x1FC8, 0x1FC9, 0x1FCA, 0x1FCB, 0x1FD8, 0x1FD9, 0x1FDA, 0x1FDB, 0x1FE8, 0x1FE9, 0x1FEA, 0x1FEB, 0x1FEC, 0x1FF8, 0x1FF9, 0x1FFA, 0x1FFB, 0x2102, 0x2107, 0x210B, 0x210C, 0x210D, 0x2110, 0x2111, 0x2112, 0x2115, 0x2119, 0x211A, 0x211B, 0x211C, 0x211D, 0x2124, 0x2126, 0x2128, 0x212A, 0x212B, 0x212C, 0x212D, 0x2130, 0x2131, 0x2132, 0x2133, 0x213E, 0x213F, 0x2145, 0x2183, 0x2C00, 0x2C01, 0x2C02, 0x2C03, 0x2C04, 0x2C05, 0x2C06, 0x2C07, 0x2C08, 0x2C09, 0x2C0A, 0x2C0B, 0x2C0C, 0x2C0D, 0x2C0E, 0x2C0F, 0x2C10, 0x2C11, 0x2C12, 0x2C13, 0x2C14, 0x2C15, 0x2C16, 0x2C17, 0x2C18, 0x2C19, 0x2C1A, 0x2C1B, 0x2C1C, 0x2C1D, 0x2C1E, 0x2C1F, 0x2C20, 0x2C21, 0x2C22, 0x2C23, 0x2C24, 0x2C25, 0x2C26, 0x2C27, 0x2C28, 0x2C29, 0x2C2A, 0x2C2B, 0x2C2C, 0x2C2D, 0x2C2E, 0x2C60, 0x2C62, 0x2C63, 0x2C64, 0x2C67, 0x2C69, 0x2C6B, 0x2C6D, 0x2C6E, 0x2C6F, 0x2C70, 0x2C72, 0x2C75, 0x2C7E, 0x2C7F, 0x2C80, 0x2C82, 0x2C84, 0x2C86, 0x2C88, 0x2C8A, 0x2C8C, 0x2C8E, 0x2C90, 0x2C92, 0x2C94, 0x2C96, 0x2C98, 0x2C9A, 0x2C9C, 0x2C9E, 0x2CA0, 0x2CA2, 0x2CA4, 0x2CA6, 0x2CA8, 0x2CAA, 0x2CAC, 0x2CAE, 0x2CB0, 0x2CB2, 0x2CB4, 0x2CB6, 0x2CB8, 0x2CBA, 0x2CBC, 0x2CBE, 0x2CC0, 0x2CC2, 0x2CC4, 0x2CC6, 0x2CC8, 0x2CCA, 0x2CCC, 0x2CCE, 0x2CD0, 0x2CD2, 0x2CD4, 0x2CD6, 0x2CD8, 0x2CDA, 0x2CDC, 0x2CDE, 0x2CE0, 0x2CE2, 0x2CEB, 0x2CED, 0x2CF2, 0xA640, 0xA642, 0xA644, 0xA646, 0xA648, 0xA64A, 0xA64C, 0xA64E, 0xA650, 0xA652, 0xA654, 0xA656, 0xA658, 0xA65A, 0xA65C, 0xA65E, 0xA660, 0xA662, 0xA664, 0xA666, 0xA668, 0xA66A, 0xA66C, 0xA680, 0xA682, 0xA684, 0xA686, 0xA688, 0xA68A, 0xA68C, 0xA68E, 0xA690, 0xA692, 0xA694, 0xA696, 0xA698, 0xA69A, 0xA722, 0xA724, 0xA726, 0xA728, 0xA72A, 0xA72C, 0xA72E, 0xA732, 0xA734, 0xA736, 0xA738, 0xA73A, 0xA73C, 0xA73E, 0xA740, 0xA742, 0xA744, 0xA746, 0xA748, 0xA74A, 0xA74C, 0xA74E, 0xA750, 0xA752, 0xA754, 0xA756, 0xA758, 0xA75A, 0xA75C, 0xA75E, 0xA760, 0xA762, 0xA764, 0xA766, 0xA768, 0xA76A, 0xA76C, 0xA76E, 0xA779, 0xA77B, 0xA77D, 0xA77E, 0xA780, 0xA782, 0xA784, 0xA786, 0xA78B, 0xA78D, 0xA790, 0xA792, 0xA796, 0xA798, 0xA79A, 0xA79C, 0xA79E, 0xA7A0, 0xA7A2, 0xA7A4, 0xA7A6, 0xA7A8, 0xA7AA, 0xA7AB, 0xA7AC, 0xA7AD, 0xA7B0, 0xA7B1, 0xA7B2, 0xA7B3, 0xA7B4, 0xA7B6, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0x10400, 0x10401, 0x10402, 0x10403, 0x10404, 0x10405, 0x10406, 0x10407, 0x10408, 0x10409, 0x1040A, 0x1040B, 0x1040C, 0x1040D, 0x1040E, 0x1040F, 0x10410, 0x10411, 0x10412, 0x10413, 0x10414, 0x10415, 0x10416, 0x10417, 0x10418, 0x10419, 0x1041A, 0x1041B, 0x1041C, 0x1041D, 0x1041E, 0x1041F, 0x10420, 0x10421, 0x10422, 0x10423, 0x10424, 0x10425, 0x10426, 0x10427, 0x10C80, 0x10C81, 0x10C82, 0x10C83, 0x10C84, 0x10C85, 0x10C86, 0x10C87, 0x10C88, 0x10C89, 0x10C8A, 0x10C8B, 0x10C8C, 0x10C8D, 0x10C8E, 0x10C8F, 0x10C90, 0x10C91, 0x10C92, 0x10C93, 0x10C94, 0x10C95, 0x10C96, 0x10C97, 0x10C98, 0x10C99, 0x10C9A, 0x10C9B, 0x10C9C, 0x10C9D, 0x10C9E, 0x10C9F, 0x10CA0, 0x10CA1, 0x10CA2, 0x10CA3, 0x10CA4, 0x10CA5, 0x10CA6, 0x10CA7, 0x10CA8, 0x10CA9, 0x10CAA, 0x10CAB, 0x10CAC, 0x10CAD, 0x10CAE, 0x10CAF, 0x10CB0, 0x10CB1, 0x10CB2, 0x118A0, 0x118A1, 0x118A2, 0x118A3, 0x118A4, 0x118A5, 0x118A6, 0x118A7, 0x118A8, 0x118A9, 0x118AA, 0x118AB, 0x118AC, 0x118AD, 0x118AE, 0x118AF, 0x118B0, 0x118B1, 0x118B2, 0x118B3, 0x118B4, 0x118B5, 0x118B6, 0x118B7, 0x118B8, 0x118B9, 0x118BA, 0x118BB, 0x118BC, 0x118BD, 0x118BE, 0x118BF, 0x1D400, 0x1D401, 0x1D402, 0x1D403, 0x1D404, 0x1D405, 0x1D406, 0x1D407, 0x1D408, 0x1D409, 0x1D40A, 0x1D40B, 0x1D40C, 0x1D40D, 0x1D40E, 0x1D40F, 0x1D410, 0x1D411, 0x1D412, 0x1D413, 0x1D414, 0x1D415, 0x1D416, 0x1D417, 0x1D418, 0x1D419, 0x1D434, 0x1D435, 0x1D436, 0x1D437, 0x1D438, 0x1D439, 0x1D43A, 0x1D43B, 0x1D43C, 0x1D43D, 0x1D43E, 0x1D43F, 0x1D440, 0x1D441, 0x1D442, 0x1D443, 0x1D444, 0x1D445, 0x1D446, 0x1D447, 0x1D448, 0x1D449, 0x1D44A, 0x1D44B, 0x1D44C, 0x1D44D, 0x1D468, 0x1D469, 0x1D46A, 0x1D46B, 0x1D46C, 0x1D46D, 0x1D46E, 0x1D46F, 0x1D470, 0x1D471, 0x1D472, 0x1D473, 0x1D474, 0x1D475, 0x1D476, 0x1D477, 0x1D478, 0x1D479, 0x1D47A, 0x1D47B, 0x1D47C, 0x1D47D, 0x1D47E, 0x1D47F, 0x1D480, 0x1D481, 0x1D49C, 0x1D49E, 0x1D49F, 0x1D4A2, 0x1D4A5, 0x1D4A6, 0x1D4A9, 0x1D4AA, 0x1D4AB, 0x1D4AC, 0x1D4AE, 0x1D4AF, 0x1D4B0, 0x1D4B1, 0x1D4B2, 0x1D4B3, 0x1D4B4, 0x1D4B5, 0x1D4D0, 0x1D4D1, 0x1D4D2, 0x1D4D3, 0x1D4D4, 0x1D4D5, 0x1D4D6, 0x1D4D7, 0x1D4D8, 0x1D4D9, 0x1D4DA, 0x1D4DB, 0x1D4DC, 0x1D4DD, 0x1D4DE, 0x1D4DF, 0x1D4E0, 0x1D4E1, 0x1D4E2, 0x1D4E3, 0x1D4E4, 0x1D4E5, 0x1D4E6, 0x1D4E7, 0x1D4E8, 0x1D4E9, 0x1D504, 0x1D505, 0x1D507, 0x1D508, 0x1D509, 0x1D50A, 0x1D50D, 0x1D50E, 0x1D50F, 0x1D510, 0x1D511, 0x1D512, 0x1D513, 0x1D514, 0x1D516, 0x1D517, 0x1D518, 0x1D519, 0x1D51A, 0x1D51B, 0x1D51C, 0x1D538, 0x1D539, 0x1D53B, 0x1D53C, 0x1D53D, 0x1D53E, 0x1D540, 0x1D541, 0x1D542, 0x1D543, 0x1D544, 0x1D546, 0x1D54A, 0x1D54B, 0x1D54C, 0x1D54D, 0x1D54E, 0x1D54F, 0x1D550, 0x1D56C, 0x1D56D, 0x1D56E, 0x1D56F, 0x1D570, 0x1D571, 0x1D572, 0x1D573, 0x1D574, 0x1D575, 0x1D576, 0x1D577, 0x1D578, 0x1D579, 0x1D57A, 0x1D57B, 0x1D57C, 0x1D57D, 0x1D57E, 0x1D57F, 0x1D580, 0x1D581, 0x1D582, 0x1D583, 0x1D584, 0x1D585, 0x1D5A0, 0x1D5A1, 0x1D5A2, 0x1D5A3, 0x1D5A4, 0x1D5A5, 0x1D5A6, 0x1D5A7, 0x1D5A8, 0x1D5A9, 0x1D5AA, 0x1D5AB, 0x1D5AC, 0x1D5AD, 0x1D5AE, 0x1D5AF, 0x1D5B0, 0x1D5B1, 0x1D5B2, 0x1D5B3, 0x1D5B4, 0x1D5B5, 0x1D5B6, 0x1D5B7, 0x1D5B8, 0x1D5B9, 0x1D5D4, 0x1D5D5, 0x1D5D6, 0x1D5D7, 0x1D5D8, 0x1D5D9, 0x1D5DA, 0x1D5DB, 0x1D5DC, 0x1D5DD, 0x1D5DE, 0x1D5DF, 0x1D5E0, 0x1D5E1, 0x1D5E2, 0x1D5E3, 0x1D5E4, 0x1D5E5, 0x1D5E6, 0x1D5E7, 0x1D5E8, 0x1D5E9, 0x1D5EA, 0x1D5EB, 0x1D5EC, 0x1D5ED, 0x1D608, 0x1D609, 0x1D60A, 0x1D60B, 0x1D60C, 0x1D60D, 0x1D60E, 0x1D60F, 0x1D610, 0x1D611, 0x1D612, 0x1D613, 0x1D614, 0x1D615, 0x1D616, 0x1D617, 0x1D618, 0x1D619, 0x1D61A, 0x1D61B, 0x1D61C, 0x1D61D, 0x1D61E, 0x1D61F, 0x1D620, 0x1D621, 0x1D63C, 0x1D63D, 0x1D63E, 0x1D63F, 0x1D640, 0x1D641, 0x1D642, 0x1D643, 0x1D644, 0x1D645, 0x1D646, 0x1D647, 0x1D648, 0x1D649, 0x1D64A, 0x1D64B, 0x1D64C, 0x1D64D, 0x1D64E, 0x1D64F, 0x1D650, 0x1D651, 0x1D652, 0x1D653, 0x1D654, 0x1D655, 0x1D670, 0x1D671, 0x1D672, 0x1D673, 0x1D674, 0x1D675, 0x1D676, 0x1D677, 0x1D678, 0x1D679, 0x1D67A, 0x1D67B, 0x1D67C, 0x1D67D, 0x1D67E, 0x1D67F, 0x1D680, 0x1D681, 0x1D682, 0x1D683, 0x1D684, 0x1D685, 0x1D686, 0x1D687, 0x1D688, 0x1D689, 0x1D6A8, 0x1D6A9, 0x1D6AA, 0x1D6AB, 0x1D6AC, 0x1D6AD, 0x1D6AE, 0x1D6AF, 0x1D6B0, 0x1D6B1, 0x1D6B2, 0x1D6B3, 0x1D6B4, 0x1D6B5, 0x1D6B6, 0x1D6B7, 0x1D6B8, 0x1D6B9, 0x1D6BA, 0x1D6BB, 0x1D6BC, 0x1D6BD, 0x1D6BE, 0x1D6BF, 0x1D6C0, 0x1D6E2, 0x1D6E3, 0x1D6E4, 0x1D6E5, 0x1D6E6, 0x1D6E7, 0x1D6E8, 0x1D6E9, 0x1D6EA, 0x1D6EB, 0x1D6EC, 0x1D6ED, 0x1D6EE, 0x1D6EF, 0x1D6F0, 0x1D6F1, 0x1D6F2, 0x1D6F3, 0x1D6F4, 0x1D6F5, 0x1D6F6, 0x1D6F7, 0x1D6F8, 0x1D6F9, 0x1D6FA, 0x1D71C, 0x1D71D, 0x1D71E, 0x1D71F, 0x1D720, 0x1D721, 0x1D722, 0x1D723, 0x1D724, 0x1D725, 0x1D726, 0x1D727, 0x1D728, 0x1D729, 0x1D72A, 0x1D72B, 0x1D72C, 0x1D72D, 0x1D72E, 0x1D72F, 0x1D730, 0x1D731, 0x1D732, 0x1D733, 0x1D734, 0x1D756, 0x1D757, 0x1D758, 0x1D759, 0x1D75A, 0x1D75B, 0x1D75C, 0x1D75D, 0x1D75E, 0x1D75F, 0x1D760, 0x1D761, 0x1D762, 0x1D763, 0x1D764, 0x1D765, 0x1D766, 0x1D767, 0x1D768, 0x1D769, 0x1D76A, 0x1D76B, 0x1D76C, 0x1D76D, 0x1D76E, 0x1D790, 0x1D791, 0x1D792, 0x1D793, 0x1D794, 0x1D795, 0x1D796, 0x1D797, 0x1D798, 0x1D799, 0x1D79A, 0x1D79B, 0x1D79C, 0x1D79D, 0x1D79E, 0x1D79F, 0x1D7A0, 0x1D7A1, 0x1D7A2, 0x1D7A3, 0x1D7A4, 0x1D7A5, 0x1D7A6, 0x1D7A7, 0x1D7A8, 0x1D7CA\n])\n"
  },
  {
    "__docId__": 92,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": null,
    "builtinExternal": true
  }
]